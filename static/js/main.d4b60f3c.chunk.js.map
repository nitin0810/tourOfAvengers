{"version":3,"sources":["components/Header/Header.js","components/Navbar/Navbar.js","components/Search/Search.js","views/Dashboard/SearchedAvenger/SearchedAvenger.js","views/Dashboard/Dashboard.js","views/List/Listitem/ListItem.js","views/List/ListOnly/ListOnly.js","components/Powers/AddPower/AddPower.js","components/Powers/Powers.js","components/AvengerDetail/AvengerDetail.js","components/Sort/Sort.js","components/Filter/Filter.js","views/List/List.js","views/Add/Add.js","views/Compare/ComparedAvenger.js","views/Compare/Compare.js","api/avengerList.js","components/EmptyAvengersList/EmptyAvengersList.js","components/MainContent/MainContent.js","api/index.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","Navs","route","name","Navbar","map","link","i","key","NavLink","activeClassName","to","Search","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","list","showList","hoveredResultIndex","input","initialSearch","inputHandler","bind","assertThisInitialized","documentClickHandler","keyboardHandler","inherits","createClass","value","document","addEventListener","removeEventListener","e","target","id","setState","length","onSearch","search","trim","filter","x","toLowerCase","includes","_this2","resultClasses","type","placeholder","autoComplete","autoCorrect","onChange","onFocus","Search_SearchResultItem","hovered","item","matchedPart","onClick","React","Component","SearchResultItem","_ref","trimmedMatch","strt","indexOf","end","slice","SearchedAvenger","imgUrl","rating","history","style","textAlign","width","display","height","margin","react_star_rating_component_default","editing","Link","concat","searchComponentKey","Dashboard","avengers","match","location","top4","giveTopFourAvengers","getSearchStringFromUrl","searchResult","findSearchedAvenger","Fragment","av","cursor","title","onTopAvengerClick","minHeight","Search_Search_Search","searchString","onAvengerSearch","Route","path","render","SearchedAvenger_SearchedAvenger","assign","push","sort","b","isFirstPopularThanSecond","av1","av2","powers","hasDedicatedMovie","URLSearchParams","get","s","find","ListItem","isSelected","backgroundColor","children","ListOnly","onAvengerClick","selectedId","avenger","ListItem_ListItem","AddPower","newPower","inputRef","createRef","handleAddPower","handleChange","onAddPower","current","focus","justifyContent","ref","proptypes","PropTypes","func","isRequired","Power","powerListRef","listStyles","listStyleType","maxHeight","overflow","border","boxShadow","scrollPowerList","prevProps","ulElement","scrollTop","scrollHeight","existingPowers","allowAdd","AddPower_AddPower","addedPower","power","index","defaultProps","AvengerDetail","saveBtnHandler","isInfoChanged","onAvengerDetailEdited","alert","stateCopy","description","planet","gender","htmlFor","checked","disabled","Powers_Power","newP","prevstate","toConsumableArray","Sort","appliedSort","onSortSelect","aria-hidden","Filter","appliedFilter","onFilterSelect","isFilterApplied","earth","movie","List","m","matchPath","pathname","params","selectedAvenger","sortFilterParams","getSearchParams","Sort_Sort","onSortFilter","objectSpread","Filter_Filter","filters","paddingTop","ListOnly_ListOnly","getFilteredSortedList","AvengerDetail_AvengerDetail_AvengerDetail","getSearchParamsString","searchParam","set","toString","sfParam","fList","Add","invalidMsg","fileRef","handleImgUpload","submitHandler","onAddPowerHandler","control","defineProperty","files","file","window","URL","revokeObjectURL","createObjectURL","prevState","preventDefault","err","giveInvalidMsg","newAvengerData","onAddAvenger","toUpperCase","onSubmit","accept","click","ComparedAvenger","won","Compare","first","second","score1","score2","winnerId","winnerName","showComapredAvengers","getWinner","fontWeight","ev","Compare_ComparedAvenger","Avengers","EmptyAvengersList","MainContent","loading","errMsg","addNewAvenger","handleAvengerEdit","newAv","n","editedAv","findIndex","fetchData","Promise","res","rej","random","Math","setTimeout","msg","then","catch","JSON","stringify","_this3","color","Switch","Dashboard_Dashboard_Dashboard","List_List","Add_Add_Add","Compare_Compare_Compare","exact","Redirect","EmptyAvengersList_EmptyAvengersList","App","Header_Header_Header","Navbar_Navbar_Navbar","marginTop","MainContent_MainContent","ReactDOM","BrowserRouter","src_App_0","getElementById"],"mappings":"saAGaA,eAAS,WAClB,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,gBAAgBC,IAAI,SAC7BL,EAAAC,EAAAC,cAAA,yCCHNI,SAAO,CACT,CAAEC,MAAO,aAAcC,KAAM,aAC7B,CAAED,MAAO,QAASC,KAAM,iBACxB,CAAED,MAAO,OAAQC,KAAM,eACvB,CAAED,MAAO,WAAYC,KAAM,aAElBC,EAAS,WAElB,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BACTG,EAAKI,IAAI,SAACC,EAAMC,GAAP,OACNZ,EAAAC,EAAAC,cAAA,MAAKW,IAAKD,GACNZ,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAASX,UAAU,WACfY,gBAAgB,kBAChBC,GAAIL,EAAKJ,OACRI,EAAKH,2DCdrBS,eAAb,SAAAC,GAEI,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACfG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAJ,GAAAS,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,KAAM,GACNC,UAAU,EACVC,mBAAoB,KACpBC,MAAOZ,EAAMa,eAAiB,IAGlCZ,EAAKa,aAAeb,EAAKa,aAAaC,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACpBA,EAAKgB,qBAAuBhB,EAAKgB,qBAAqBF,KAA1Bb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAC5BA,EAAKiB,gBAAkBjB,EAAKiB,gBAAgBH,KAArBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAXRA,EAFvB,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAJ,EAAAC,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAJ,EAAA,EAAAJ,IAAA,oBAAA2B,MAAA,WAiBQC,SAASC,iBAAiB,QAASnB,KAAKa,sBACxCK,SAASC,iBAAiB,UAAWnB,KAAKc,mBAlBlD,CAAAxB,IAAA,uBAAA2B,MAAA,WAsBQC,SAASE,oBAAoB,QAASpB,KAAKa,sBAC3CK,SAASE,oBAAoB,UAAWpB,KAAKc,mBAvBrD,CAAAxB,IAAA,uBAAA2B,MAAA,SA4ByBI,GAGG,cAAhBA,EAAEC,OAAOC,IACbvB,KAAKwB,SAAS,CAAElB,UAAU,EAAOC,mBAAoB,SAhC7D,CAAAjB,IAAA,kBAAA2B,MAAA,SAmCoBI,GAGRrB,KAAKI,MAAME,WAKG,cAAVe,EAAE/B,IACFU,KAAKwB,SAAS,SAACpB,GAEX,MAAO,CACHG,mBAFsC,MAA5BH,EAAMG,mBAA6BH,EAAMG,qBAAuBH,EAAMC,KAAKoB,OAAS,EAAIrB,EAAMG,mBAAqBH,EAAMG,mBAAqB,EAAI,KAKnJ,YAAVc,EAAE/B,IACTU,KAAKwB,SAAS,SAACpB,GAEX,MAAO,CACHG,mBAFsC,MAA5BH,EAAMG,mBAA0D,IAA7BH,EAAMG,mBAA2BH,EAAMG,mBAAqBH,EAAMG,mBAAqB,EAAI,KAK/H,UAAVc,EAAE/B,MAC4B,MAAjCU,KAAKI,MAAMG,mBACXP,KAAK0B,SAAS1B,KAAKI,MAAMC,KAAKL,KAAKI,MAAMG,oBAAoBtB,MAE7De,KAAK0B,SAAS1B,KAAKI,MAAMI,WA7D7C,CAAAlB,IAAA,eAAA2B,MAAA,SAoEiBI,GACT,IAAMM,EAASN,EAAEC,OAAOL,MACxBjB,KAAKwB,SAAS,CACVhB,MAAOmB,EACPtB,KAAwB,KAAlBsB,EAAOC,OAAgB5B,KAAKJ,MAAMS,KAAKwB,OAAO,SAAAC,GAAC,OAAIA,EAAE7C,KAAK8C,cAAcC,SAASL,EAAOI,cAAcH,UAAW,OAxEnI,CAAAtC,IAAA,WAAA2B,MAAA,SA6EaU,GACDA,GAA4B,KAAlBA,EAAOC,QACjB5B,KAAKJ,MAAM8B,SAASC,KA/EhC,CAAArC,IAAA,SAAA2B,MAAA,WAmFa,IAAAgB,EAAAjC,KAGCkC,EAAgB,kBACjBlC,KAAKI,MAAME,UAAYN,KAAKI,MAAMC,KAAKoB,OAAS,EAAI,oBAAsB,qBAE/E,OACQhD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACJH,EAAAC,EAAAC,cAAA,SAAOwD,KAAK,SAASvD,UAAU,2BAA2B2C,GAAG,YAAYN,MAAOjB,KAAKI,MAAMI,MAC3F4B,YAAY,iBACRC,aAAa,MACbC,YAAY,MACZC,SAAUvC,KAAKU,aACf8B,QAAS,SAACnB,GAAD,OAAOY,EAAKT,SAAS,CAAElB,UAAU,OAGtD7B,EAAAC,EAAAC,cAAA,MAAIC,UAAWsD,GACVlC,KAAKI,MAAMC,KAAKlB,IAAI,SAACT,EAAGW,GAAJ,OACjBZ,EAAAC,EAAAC,cAAC8D,EAAD,CAAkBnD,IAAKZ,EAAE6C,GACrBmB,QAASrD,IAAM4C,EAAK7B,MAAMG,mBAC1BoC,KAAMjE,EAAEO,KAAM2D,YAAaX,EAAK7B,MAAMI,MACtCqC,QAAS,SAACxB,GAAQY,EAAKP,SAAShD,EAAEO,iBAxGlES,EAAA,CAA4BoD,IAAMC,YA2H5BC,EAAmB,SAAAC,GAA6C,IAA1CP,EAA0CO,EAA1CP,QAASC,EAAiCM,EAAjCN,KAAMC,EAA2BK,EAA3BL,YAAaC,EAAcI,EAAdJ,QAC9CK,EAAeN,EAAYhB,OAC3BuB,EAAOR,EAAKZ,cAAcqB,QAAQF,EAAanB,eACjDsB,EAAMF,EAAOD,EAAazB,OAC9B,OACIhD,EAAAC,EAAAC,cAAA,MAAIC,UAAW,qBAAuB8D,EAAU,0BAA4B,IAAKG,QAASA,GACrFF,EAAKW,MAAM,EAAGH,GAAM1E,EAAAC,EAAAC,cAAA,SAAIgE,EAAKW,MAAMH,EAAME,IAAUV,EAAKW,MAAMD,8BCpI9DE,EAAkB,SAAAN,GAA2C,IAAxC1B,EAAwC0B,EAAxC1B,GAAItC,EAAoCgE,EAApChE,KAAMuE,EAA8BP,EAA9BO,OAAQC,EAAsBR,EAAtBQ,OAAsBR,EAAdS,QAExD,OAAKzE,EAWDR,EAAAC,EAAAC,cAAA,OAAKgF,MAAO,CAAEC,UAAW,WACrBnF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO+E,MAAO,CAACE,MAAM,MAAMC,QAAQ,iBAC9CrF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe+E,MAAO,CAAEI,OAAQ,SAAWlF,IAAK2E,EAAQ1E,IAAI,gBAC3EL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAa+E,MAAO,CAACK,OAAO,IAAK/E,GAC/CR,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CACIO,KAAK,QACLiF,SAAS,EACTjD,MAAOwC,IAEXhF,EAAAC,EAAAC,cAAA,oCAA2BF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAM1E,GAAE,SAAA2E,OAAW7C,IAAnB,kBAnBnC9C,EAAAC,EAAAC,cAAA,OAAKgF,MAAO,CAAEC,UAAW,WACrBnF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAAA,sCAA6BF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CAAM1E,GAAG,QAAT,aCJzC4E,EAAqB,EAEZC,EAAY,SAAArB,GAA4C,IAAzCsB,EAAyCtB,EAAzCsB,SAAUC,EAA+BvB,EAA/BuB,MAAOC,EAAwBxB,EAAxBwB,SAAUf,EAAcT,EAAdS,QAG7CgB,EAAOC,EAAoBJ,GAC3B9D,EAAgBmE,EAAuBH,GACvCI,EAAeC,EAAoBrE,EAAe8D,GAExD,OACI9F,EAAAC,EAAAC,cAACF,EAAAC,EAAMqG,SAAP,KACItG,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACV8F,EAAKvF,IAAI,SAAA6F,GAAE,OACRvG,EAAAC,EAAAC,cAAA,OAAKW,IAAK0F,EAAGzD,GAAI3C,UAAU,iBACvB+E,MAAO,CAAEsB,OAAQ,WAAaC,MAAM,wBACpCrC,QAAS,kBAAMsC,EAAkBzB,EAASsB,EAAGzD,MAE7C9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO+E,MAAO,CAACyB,UAAU,UACpC3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAwBC,IAAKmG,EAAGxB,OAAQ1E,IAAI,gBAC3DL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,EAAG/F,YAMnDR,EAAAC,EAAAC,cAAC0G,EAAD,CAAQhF,KAAMkE,EAAU9D,cAAeA,EAAenB,MAAO+E,EACzD3C,SAAU,SAAC4D,GAAD,OAAkBC,EAAgBD,EAAc5B,EAASc,MAEvE/F,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOC,KAAI,GAAArB,OAAKI,EAAMiB,KAAX,WACPC,OAAQ,SAAC9F,GAAD,OACJnB,EAAAC,EAAAC,cAACgH,EAAD7F,OAAA8F,OAAA,GAAqBhG,EAArB,CACI2B,GAAIsD,EAAatD,GACjBtC,KAAM4F,EAAa5F,KACnBuE,OAAQqB,EAAarB,OACrBC,OAAQoB,EAAapB,eAUvC0B,EAAoB,SAACzB,EAASnC,GAChCmC,EAAQmC,KAAR,SAAAzB,OAAsB7C,KAIpBoD,EAAsB,SAACJ,GACzB,OAAOA,EAASuB,KAAK,SAACpH,EAAGqH,GAAJ,OAAUC,EAAyBtH,EAAGqH,IAAM,EAAI,IAAGzC,MAAM,EAAG,IAI/E0C,EAA2B,SAACC,EAAKC,GAKnC,OAHWD,EAAIxC,OAASwC,EAAIE,OAAO1E,QAAUwE,EAAIG,kBAAoB,EAAI,IAChEF,EAAIzC,OAASyC,EAAIC,OAAO1E,QAAUyE,EAAIE,kBAAoB,EAAI,IAMrEb,EAAkB,SAACD,EAAc5B,EAASc,GAC5Cd,EAAQmC,KAAR,GAAAzB,OAAgBI,EAAMiB,KAAtB,cAAArB,OAAuCkB,KAGrCV,EAAyB,SAACH,GAE5B,OADoB,IAAI4B,gBAAgB5B,EAAS9C,QAC9B2E,IAAI,MAAQ,IAG7BxB,EAAsB,SAACnD,EAAQ4C,GACjC,IAAMgC,EAAI5E,EAAOC,OACjB,OAAO2C,EAASiC,KAAK,SAAAxB,GAAE,OAAIuB,EAAExE,gBAAkBiD,EAAG/F,KAAK8C,iBAAkB,oBC/EhE0E,EAAW,SAAC7G,GAAU,IAEvB8G,EAAwB9G,EAAxB8G,WAAY7D,EAAYjD,EAAZiD,QACpB,OACIpE,EAAAC,EAAAC,cAAA,MAAIgF,MAAO,CAAEgD,gBAAiBD,EAAa,UAAY,eAAiB7D,QAAS,kBAAMA,MACnFpE,EAAAC,EAAAC,cAAA,OAAKE,IAAKe,EAAMgH,SAASpD,QAAU,sBAAuB1E,IAAI,gBAC9DL,EAAAC,EAAAC,cAAA,UAAKiB,EAAMgH,SAAS3H,MACpBR,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CACIO,KAAK,QACLiF,SAAS,EACTjD,MAAOrB,EAAMgH,SAASnD,WCTzBoD,EAAW,SAAA5D,GAA2C,IAAxCsB,EAAwCtB,EAAxCsB,SAASuC,EAA+B7D,EAA/B6D,eAAeC,EAAgB9D,EAAhB8D,WAE/C,OACQtI,EAAAC,EAAAC,cAAA,UACK4F,EAASpF,IAAI,SAAA6H,GAAO,OACjBvI,EAAAC,EAAAC,cAACsI,EAAD,CAAU3H,IAAK0H,EAAQzF,GACnBmF,WAAYM,EAAQzF,KAAOwF,EAC3BlE,QAAS,kBAAMiE,EAAeE,EAAQzF,MACrCyF,uBCTZE,EAAb,SAAAvH,GACI,SAAAuH,EAAYtH,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkH,IACfrH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoH,GAAA/G,KAAAH,KAAMJ,KAEDQ,MAAQ,CACT+G,SAAU,IAGdtH,EAAKuH,SAAWtE,IAAMuE,YAEtBxH,EAAKyH,eAAiBzH,EAAKyH,eAAe3G,KAApBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACtBA,EAAK0H,aAAe1H,EAAK0H,aAAa5G,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAVLA,EADvB,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAoH,EAAAvH,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAoH,EAAA,EAAA5H,IAAA,eAAA2B,MAAA,SAciBI,GAAKrB,KAAKwB,SAAS,CAAE2F,SAAU9F,EAAEC,OAAOL,UAdzD,CAAA3B,IAAA,iBAAA2B,MAAA,SAgBmBI,GACwB,KAA/BrB,KAAKI,MAAM+G,SAASvF,SACpB5B,KAAKJ,MAAM4H,WAAWxH,KAAKI,MAAM+G,UACjCnH,KAAKwB,SAAS,CAAC2F,SAAS,KACxBnH,KAAKoH,SAASK,QAAQC,WApBlC,CAAApI,IAAA,SAAA2B,MAAA,WAyBQ,OACIxC,EAAAC,EAAAC,cAAA,OAAKgF,MAAO,CAACG,QAAQ,OAAO6D,eAAe,kBACvClJ,EAAAC,EAAAC,cAAA,SAAQgF,MAAO,CAACE,MAAM,OAAQ1B,KAAK,OAAOlB,MAAOjB,KAAKI,MAAM+G,SACxD/E,YAAY,YAAYwF,IAAK5H,KAAKoH,SAClC7E,SAAUvC,KAAKuH,eACnB9I,EAAAC,EAAAC,cAAA,UAASC,UAAU,yBAAyBuD,KAAK,SAASU,QAAS7C,KAAKsH,gBAAxE,YA9BhBJ,EAAA,CAA8BpE,IAAMC,WAoCpCmE,EAASW,UAAY,CACjBL,WAAYM,IAAUC,KAAKC,YCpCxB,IAAMC,EAAb,SAAAtI,GAEI,SAAAsI,EAAYrI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiI,IACfpI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmI,GAAA9H,KAAAH,KAAMJ,KACDsI,aAAepF,IAAMuE,YAC1BxH,EAAKsI,WAAa,CACdtE,MAAO,MACPuE,cAAe,UACfC,UAAW,QACXC,SAAU,OACVC,OAAQ,2BACRC,UAAW,wBATA3I,EAFvB,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAmI,EAAAtI,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAmI,EAAA,EAAA3I,IAAA,oBAAA2B,MAAA,WAgBQjB,KAAKyI,oBAhBb,CAAAnJ,IAAA,qBAAA2B,MAAA,SAmBuByH,GAIX1I,KAAKJ,MAAMuG,OAAO1E,SAAWiH,EAAUvC,OAAO1E,QAC9CzB,KAAKyI,oBAxBjB,CAAAnJ,IAAA,kBAAA2B,MAAA,WA8BQ,IAAM0H,EAAY3I,KAAKkI,aAAaT,QACpCkB,EAAUC,UAAYD,EAAUE,eA/BxC,CAAAvJ,IAAA,SAAA2B,MAAA,WAmCa,IAAAgB,EAAAjC,KACC8I,EAAiB9I,KAAKJ,MAAMuG,OAClC,OACI1H,EAAAC,EAAAC,cAAA,WAAMqB,KAAKJ,MAAMmJ,SACbtK,EAAAC,EAAAC,cAACqK,EAAD,CAAUxB,WAAY,SAACyB,GAAD,OAAgBhH,EAAKrC,MAAM4H,WAAWyB,MAC1D,KAGFxK,EAAAC,EAAAC,cAAA,MAAIiJ,IAAK5H,KAAKkI,aAAcvE,MAAO3D,KAAKmI,YACnCW,EAAe3J,IAAI,SAAC+J,EAAOC,GAAR,OAChB1K,EAAAC,EAAAC,cAAA,MAAIW,IAAK6J,GAAQD,WA7CzCjB,EAAA,CAA2BnF,IAAMC,WA4DjCkF,EAAMmB,aAAe,CACjBL,UAAU,aC5DDM,EAAb,SAAA1J,GACI,SAAA0J,EAAYzJ,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqJ,IACfxJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuJ,GAAAlJ,KAAAH,KAAMJ,KAGDQ,MAAQ,GACbP,EAAKyJ,eAAiBzJ,EAAKyJ,eAAe3I,KAApBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACtBA,EAAK0J,cAAgB1J,EAAK0J,cAAc5I,KAAnBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KANNA,EADvB,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAuJ,EAAA1J,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAuJ,EAAA,EAAA/J,IAAA,iBAAA2B,MAAA,WAoCYjB,KAAKuJ,iBACLvJ,KAAKJ,MAAM4J,sBACP1J,OAAO8F,OAAO5F,KAAKJ,MAAMoH,QAAS,CAC9BZ,kBAAmBpG,KAAKI,MAAMgG,kBAC9B3C,OAAQzD,KAAKI,MAAMqD,OACnB0C,OAAQnG,KAAKI,MAAM+F,UAE3BsD,MAAM,8BAENA,MAAM,wBA7ClB,CAAAnK,IAAA,gBAAA2B,MAAA,WAkDQ,OAAOjB,KAAKI,MAAMgG,oBAAsBpG,KAAKI,MAAMsJ,UAAUtD,mBACzDpG,KAAKI,MAAMqD,SAAWzD,KAAKI,MAAMsJ,UAAUjG,QAC3CzD,KAAKI,MAAM+F,OAAO1E,SAAWzB,KAAKI,MAAMsJ,UAAUvD,OAAO1E,SApDrE,CAAAnC,IAAA,SAAA2B,MAAA,WAuDa,IAAAgB,EAAAjC,KACCgF,EAAKhF,KAAKJ,MAAMoH,QACtB,OACKhC,EAEGvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe+E,MAAO,CAAEI,OAAQ,SAAWlF,IAAKmG,EAAGxB,OAAQ1E,IAAI,YAC9EL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoG,EAAG/F,MAC/BR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaoG,EAAG2E,aAC7BlL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,sBAAiBqG,EAAG4E,QAC7CnL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,sBAA+B,MAAdqG,EAAG6E,OAAiB,OAAS,UACvEpL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,YAAWrL,EAAAC,EAAAC,cAAA,oCAC/CF,EAAAC,EAAAC,cAAA,SAAOwD,KAAK,WAAW4H,QAAS/J,KAAKI,MAAMgG,kBAAmB7E,GAAG,WAC7DtC,KAAK,oBACLsD,SAAU,SAAClB,GAAD,OAAOY,EAAKT,SAAS,CAAE4E,kBAAmB/E,EAAEC,OAAOyI,cAGrEtL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,sBACrBF,EAAAC,EAAAC,cAAA,UAAQsC,MAAOjB,KAAKI,MAAMqD,OACtBxE,KAAK,SACLsD,SAAU,SAAClB,GAAQY,EAAKT,SAAS,CAAEiC,QAASpC,EAAEC,OAAOL,UACrDxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,IAAI+I,UAAQ,GAA1B,iBACAvL,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,KAAd,KACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,KAAd,KACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,KAAd,KACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,KAAd,KACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,KAAd,OAGRxC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAYH,EAAAC,EAAAC,cAAA,uBAEzBF,EAAAC,EAAAC,cAACsL,EAAD,CAAO9D,OAAQnG,KAAKI,MAAM+F,OACtB4C,UAAU,EACVvB,WAAY,SAAC0C,GAAWjI,EAAKT,SAAS,SAAC2I,GAAD,MAAgB,CAAEhE,OAAOrG,OAAAsK,EAAA,EAAAtK,CAAKqK,EAAUhE,QAAhB/B,OAAA,CAAwB8F,UAE1FzL,EAAAC,EAAAC,cAAA,UAAQwD,KAAK,SAASvD,UAAU,yBAAyBiE,QAAS7C,KAAKsJ,gBAAvE,kBAhCR7K,EAAAC,EAAAC,cAAA,gFA3DhB,EAAAW,IAAA,2BAAA2B,MAAA,SAWoCrB,EAAOQ,GACnC,OAAIR,EAAMoH,SAAYpH,EAAMoH,QAAQzF,KAAOnB,EAAMmB,GAG5B,CACbA,GAAI3B,EAAMoH,QAAQzF,GAClB6E,kBAAmBxG,EAAMoH,QAAQZ,kBACjC3C,OAAQ7D,EAAMoH,QAAQvD,OACtB0C,OAAQvG,EAAMoH,QAAQb,OAGtBuD,UAAW,CACPnI,GAAI3B,EAAMoH,QAAQzF,GAClB6E,kBAAmBxG,EAAMoH,QAAQZ,kBACjC3C,OAAQ7D,EAAMoH,QAAQvD,OACtB0C,OAAQvG,EAAMoH,QAAQb,SAM3B,SAhCfkD,EAAA,CAAmCvG,IAAMC,WCF5BsH,EAAO,SAAApH,GAAmC,IAAhCqH,EAAgCrH,EAAhCqH,YAAaC,EAAmBtH,EAAnBsH,aAEhC,OACI9L,EAAAC,EAAAC,cAACF,EAAAC,EAAMqG,SAAP,KACItG,EAAAC,EAAAC,cAAA,kBAAU2L,GAAgB7L,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAc4L,cAAY,UACjE/L,EAAAC,EAAAC,cAAA,UAAQsC,MAAOqJ,EAAa/H,SAAU,SAAClB,GAAD,OAAOkJ,EAAalJ,EAAEC,OAAOL,SAC/DxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,GAAG+I,UAAQ,GAAzB,kBACAvL,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,QAAd,QACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,MAAd,wBACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,MAAd,2BCTHwJ,EAAS,SAAAxH,GAAuC,IAApCyH,EAAoCzH,EAApCyH,cAAeC,EAAqB1H,EAArB0H,eAIpC,OACIlM,EAAAC,EAAAC,cAACF,EAAAC,EAAMqG,SAAP,KAEItG,EAAAC,EAAAC,cAAA,oBAAYiM,EAAgBF,IAAkBjM,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAc4L,cAAY,UACrF/L,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,SACXrL,EAAAC,EAAAC,cAAA,SAAO4C,GAAG,QAAQY,KAAK,WAAW4H,QAAiC,SAAxBW,EAAcG,MACrDtI,SAAU,SAAClB,GAAD,OAAOsJ,EAAe,CAAEE,MAAOxJ,EAAEC,OAAOyI,QAASe,MAAOJ,EAAcI,WAFxF,eAKArM,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,SACXrL,EAAAC,EAAAC,cAAA,SAAO4C,GAAG,QAAQY,KAAK,WAAW4H,QAAiC,SAAxBW,EAAcI,MACrDvI,SAAU,SAAClB,GAAD,OAAOsJ,EAAe,CAAEE,MAAOH,EAAcG,MAAOC,MAAOzJ,EAAEC,OAAOyI,aAFtF,0BAUNa,EAAkB,SAACF,GACrB,OAAOA,EAAcI,OAASJ,EAAcG,OCjBnCE,EAAO,SAAA9H,GAAmE,IAAhEsB,EAAgEtB,EAAhEsB,SAAUC,EAAsDvB,EAAtDuB,MAAOC,EAA+CxB,EAA/CwB,SAAUf,EAAqCT,EAArCS,QAAS8F,EAA4BvG,EAA5BuG,sBAMjDwB,EAAIC,YAAUxG,EAASyG,SAAU,CACnCzF,KAAI,GAAArB,OAAKI,EAAMiB,KAAX,UAGFsB,EAAaiE,GAAKA,EAAEG,OAAO5J,IAAMyJ,EAAEG,OAAO5J,GAAK,KAG/C6J,EAAkBrE,GAAaxC,EAASiC,KAAK,SAAAxB,GAAE,OAAI+B,IAAe/B,EAAGzD,MAAc,KAGnF8J,EAAmBC,EAAgB7G,GAEzC,OACIhG,EAAAC,EAAAC,cAACF,EAAAC,EAAMqG,SAAP,KACItG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAC4M,EAAD,CAAMjB,YAAae,EAAiBvF,KAChCyE,aAAc,SAACzE,GAAD,OAAU0F,EAAa1L,OAAA2L,EAAA,EAAA3L,CAAA,GAAKuL,EAAN,CAAwBvF,SAAQtB,EAAOd,OAEnFjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAC+M,EAAD,CAAQhB,cAAe,CAAEG,MAAOQ,EAAiBR,MAAOC,MAAOO,EAAiBP,OAASlM,UAAU,SAC/F+L,eAAgB,SAACgB,GAAD,OAAaH,EAAa1L,OAAA2L,EAAA,EAAA3L,CAAA,GAAKuL,EAAqBM,GAAWnH,EAAOd,QAIlGjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM+E,MAAO,CAACiI,WAAW,SACpCnN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAACkN,EAAD,CAAUtH,SAAUuH,EAAsBvH,EAAU8G,GAChDtE,WAAYA,EACZD,eAAgB,SAACvF,GAAD,OAAQuF,EAAevF,EAAI8J,EAAkB7G,EAAOd,OAG5EjF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOC,KAAI,GAAArB,OAAKI,EAAMiB,KAAX,QACPC,OAAQ,SAAC9F,GAAD,OAAWnB,EAAAC,EAAAC,cAACoN,EAAD,CAAe/E,QAASoE,EAAiB5B,sBAAuBA,WAOrG1C,EAAiB,SAACvF,EAAI4J,EAAQ3G,EAAOd,GACvC,IAAM4B,EAAe0G,EAAsBb,GAC3CzH,EAAQmC,KAAR,GAAAzB,OAAgBI,EAAMiB,KAAtB,KAAArB,OAA8B7C,EAA9B,MAAA6C,OAAqCkB,KAGnCkG,EAAe,SAACL,EAAQ3G,EAAOd,GACjC,IAAM4B,EAAe0G,EAAsBb,GAC3CzH,EAAQmC,KAAR,GAAAzB,OAAgBI,EAAMiB,KAAtB,MAAArB,OAA+BkB,KAG7BgG,EAAkB,SAAC7G,GACrB,IAAMwH,EAAc,IAAI5F,gBAAgB5B,EAAS9C,QACjD,MAAO,CACHmE,KAAMmG,EAAY3F,IAAI,SAAW,GACjCuE,MAAOoB,EAAY3F,IAAI,WAAY,EACnCwE,MAAOmB,EAAY3F,IAAI,WAAY,IAIrC0F,EAAwB,SAACb,GAC3B,IAAMc,EAAc,IAAI5F,gBAIxB,OAHI8E,EAAOrF,MAAQmG,EAAYC,IAAI,OAAQf,EAAOrF,MAC9CqF,EAAON,OAASoB,EAAYC,IAAI,QAASf,EAAON,OAChDM,EAAOL,OAASmB,EAAYC,IAAI,QAASf,EAAOL,OAC7CmB,EAAYE,YAGjBL,EAAwB,SAACzL,EAAM+L,GACjC,IAAIC,EAAQhM,EAiBZ,OAhBI+L,EAAQvB,QACRwB,EAAQA,EAAMxK,OAAO,SAAAnD,GAAC,MAAiB,UAAbA,EAAEkL,UAE5BwC,EAAQtB,QACRuB,EAAQA,EAAMxK,OAAO,SAAAnD,GAAC,OAAIA,EAAE0H,qBAE5BgG,EAAQtG,OACa,SAAjBsG,EAAQtG,KACRuG,EAAQA,EAAMvG,KAAK,SAACpH,EAAGqH,GAAJ,OAAUrH,EAAEO,MAAQ8G,EAAE9G,MAAQ,EAAI,IAC7B,OAAjBmN,EAAQtG,KACfuG,EAAQA,EAAMvG,KAAK,SAACpH,EAAGqH,GAAJ,OAAUrH,EAAE+E,QAAUsC,EAAEtC,QAAU,EAAI,IACjC,OAAjB2I,EAAQtG,OACfuG,EAAQA,EAAMvG,KAAK,SAACpH,EAAGqH,GAAJ,OAAUrH,EAAE+E,QAAUsC,EAAEtC,QAAU,EAAI,MAI1D4I,WCjGEC,UAAb,SAAA3M,GAEI,SAAA2M,EAAY1M,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsM,IACfzM,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwM,GAAAnM,KAAAH,KAAMJ,KACDQ,MAAQ,CACTnB,KAAM,GACN0K,YAAa,GACbC,OAAQ,GACRC,OAAQ,GACR1D,OAAQ,GACR3C,OAAQ,GACRC,OAAQ,EACR2C,mBAAmB,EACnBmG,WAAY,IAEhB1M,EAAK2M,QAAU1J,IAAMuE,YACrBxH,EAAK0H,aAAe1H,EAAK0H,aAAa5G,KAAlBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACpBA,EAAK4M,gBAAkB5M,EAAK4M,gBAAgB9L,KAArBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACvBA,EAAK6M,cAAgB7M,EAAK6M,cAAc/L,KAAnBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACrBA,EAAK8M,kBAAoB9M,EAAK8M,kBAAkBhM,KAAvBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAjBVA,EAFvB,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAwM,EAAA3M,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAwM,EAAA,EAAAhN,IAAA,eAAA2B,MAAA,SAuBiBI,GACT,IAAMuL,EAAUvL,EAAEC,OAAOrC,KAET,SAAZ2N,GAAkC,gBAAZA,GAAyC,WAAZA,GACvC,WAAZA,GAAoC,WAAZA,EACxB5M,KAAKwB,SAAL1B,OAAA+M,EAAA,EAAA/M,CAAA,GAAiB8M,EAAsB,WAAZA,GAAwBvL,EAAEC,OAAOL,MAAQI,EAAEC,OAAOL,QAC1D,sBAAZ2L,GACP5M,KAAKwB,SAAS,CAAE4E,kBAAmB/E,EAAEC,OAAOyI,YA9BxD,CAAAzK,IAAA,kBAAA2B,MAAA,SAkCoBI,GACZ,GAAKA,EAAEC,OAAOwL,MAAMrL,OAApB,CACA,IAAMsL,EAAO1L,EAAEC,OAAOwL,MAAM,GACxB9M,KAAKI,MAAMoD,QACXwJ,OAAOC,IAAIC,gBAAgBlN,KAAKI,MAAMoD,QAE1CxD,KAAKwB,SAAS,CAAEgC,OAAQwJ,OAAOC,IAAIE,gBAAgBJ,QAxC3D,CAAAzN,IAAA,oBAAA2B,MAAA,SA2CsBkG,GAEdnH,KAAKwB,SAAS,SAAC4L,GAAD,MAAgB,CAC1BjH,OAAOrG,OAAAsK,EAAA,EAAAtK,CAAKsN,EAAUjH,QAAhB/B,OAAA,CAAwB+C,SA9C1C,CAAA7H,IAAA,gBAAA2B,MAAA,SAkDkBI,GACVA,EAAEgM,iBACF,IAAMC,EAAMtN,KAAKuN,iBACjB,GAAID,EACAtN,KAAKwB,SAAS,CAAE+K,WAAYe,QACzB,CAEHtN,KAAKwB,SAAS,CACVvC,KAAM,GACN0K,YAAa,GACbC,OAAQ,GACRC,OAAQ,GACR1D,OAAQ,GACR3C,OAAQ,GACRC,OAAQ,EACR2C,mBAAmB,EACnBmG,WAAY,KAMhB,IAAMiB,EAAiB1N,OAAO8F,OAAO,GAAI5F,KAAKI,cACvCoN,EAAejB,WAEtBvM,KAAKJ,MAAM6N,aAAaD,GACxB/D,MAAM,iCA5ElB,CAAAnK,IAAA,iBAAA2B,MAAA,WAiFQ,IAAK,IAAMa,KAAK9B,KAAKI,MACjB,GAAU,eAAN0B,GAA4B,WAANA,GAAwB,sBAANA,GAAmC,WAANA,GACrE,IAAK9B,KAAKI,MAAM0B,GACZ,SAAAsC,OAAUtC,EAAE4L,cAAZ,qBAED,GAAU,WAAN5L,IAAmB9B,KAAKI,MAAM0B,GAAGL,OACxC,MAAO,mCAGf,MAAO,KA1Ff,CAAAnC,IAAA,SAAA2B,MAAA,WA8Fa,IAAAgB,EAAAjC,KAEL,OACIvB,EAAAC,EAAAC,cAAA,QAAMgP,SAAU3N,KAAK0M,cAAe9N,UAAU,OAE1CH,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,OAAOlL,UAAU,cAAhC,WACAH,EAAAC,EAAAC,cAAA,SAAOwD,KAAK,OAAOlB,MAAOjB,KAAKI,MAAMnB,KACjCmD,YAAY,aACZnD,KAAK,OAAOsC,GAAG,OAAO3C,UAAU,aAChC2D,SAAUvC,KAAKuH,eAGnB9I,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,cAAclL,UAAU,cAAvC,kBACAH,EAAAC,EAAAC,cAAA,YAAUwD,KAAK,WAAWlB,MAAOjB,KAAKI,MAAMuJ,YACxCvH,YAAY,oBACZnD,KAAK,cAAcsC,GAAG,cACtBgB,SAAUvC,KAAKuH,aAAc3I,UAAU,eAG3CH,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,SAASlL,UAAU,cAAlC,aACAH,EAAAC,EAAAC,cAAA,SAAOwD,KAAK,OAAOlB,MAAOjB,KAAKI,MAAMwJ,OACjCxH,YAAY,eACZnD,KAAK,SAASsC,GAAG,SACjBgB,SAAUvC,KAAKuH,aAAc3I,UAAU,eAG3CH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOwD,KAAK,QAAQZ,GAAG,IAAIwI,QAA+B,MAAtB/J,KAAKI,MAAMyJ,OAC3C5I,MAAM,IACNhC,KAAK,SACLsD,SAAUvC,KAAKuH,eACjB9I,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,KAAf,SAENrL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOwD,KAAK,QAAQZ,GAAG,IAAIwI,QAA+B,MAAtB/J,KAAKI,MAAMyJ,OAC3C5I,MAAM,IACNhC,KAAK,SACLsD,SAAUvC,KAAKuH,eACjB9I,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,KAAf,YAGVrL,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,WAAWlL,UAAU,0BAApC,2BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOwD,KAAK,WAAWZ,GAAG,WAAWwI,QAAS/J,KAAKI,MAAMgG,kBACrDnH,KAAK,oBACLsD,SAAUvC,KAAKuH,gBAIvB9I,EAAAC,EAAAC,cAAA,SAAOmL,QAAQ,SAASlL,UAAU,cAAlC,aACAH,EAAAC,EAAAC,cAAA,UAAQsC,MAAOjB,KAAKI,MAAMqD,OACtBxE,KAAK,SAASsC,GAAG,SACjBgB,SAAUvC,KAAKuH,aAAc3I,UAAU,cAEvCH,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,IAAI+I,UAAQ,GAA1B,iBACAvL,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,KAAd,KACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,KAAd,KACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,KAAd,KACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,KAAd,KACAxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,KAAd,MAGJxC,EAAAC,EAAAC,cAAA,SAAOwD,KAAK,OAAOyL,OAAO,UAAUjK,MAAO,CAAEG,QAAS,QAAU8D,IAAK5H,KAAKwM,QAASjK,SAAUvC,KAAKyM,kBAClGhO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEXH,EAAAC,EAAAC,cAAA,UAAQwD,KAAK,SAASvD,UAAU,mBAC5BiE,QAAS,kBAAMZ,EAAKuK,QAAQ/E,QAAQoG,UACnC7N,KAAKI,MAAMoD,OAAS,eAAiB,iBAE9C/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKmB,KAAKI,MAAMoD,QAAU,sBAAuB1E,IAAI,iBAI9DL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cAAjB,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACsL,EAAD,CAAO9D,OAAQnG,KAAKI,MAAM+F,OACtB4C,UAAU,EACVvB,WAAYxH,KAAK2M,qBAIxB3M,KAAKI,MAAMmM,WACR9N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqB+E,MAAO,CAAEE,MAAO,MAAOD,UAAW,WACjE5D,KAAKI,MAAMmM,YAEd,KAGN9N,EAAAC,EAAAC,cAAA,OAAKgF,MAAO,CAAEE,MAAO,MAAOD,UAAW,WACnCnF,EAAAC,EAAAC,cAAA,UAAQgF,MAAO,CAAEE,MAAO,OAAS1B,KAAK,SAASvD,UAAU,mBAAzD,gBA1LpB0N,EAAA,CAAyBxJ,IAAMC,YAiM/BuJ,GAAIzE,UAAY,CACZ4F,aAAc3F,IAAUC,KAAKC,sBCpKlB8F,GA/BS,SAAA7K,GAAsB,IAAnB+D,EAAmB/D,EAAnB+D,QAAS+G,EAAU9K,EAAV8K,IAGhC,OACItP,EAAAC,EAAAC,cAAA,OAAKC,UAAW,qBAAqBmP,EAAI,qBAAqB,sBAC1DtP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe+E,MAAO,CAAEI,OAAQ,SAAWlF,IAAKmI,EAAQxD,OAAQ1E,IAAI,gBACnFL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoI,EAAQ/H,MACpCR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,wBACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAW,iBAAmBoI,EAAQZ,kBAAoB,WAAa,eAE9E3H,EAAAC,EAAAC,cAAA,eAAMF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,aACFH,EAAAC,EAAAC,cAACsF,EAAAvF,EAAD,CACAE,UAAU,YACNK,KAAK,QACLiF,SAAS,EACTjD,MAAO+F,EAAQvD,UAGvBhF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY+E,MAAO,CAACC,UAAU,UAC7CnF,EAAAC,EAAAC,cAAA,YAAQqI,EAAQb,OAAO1E,aCvB9BuM,GAAb,SAAArO,GAEI,SAAAqO,EAAYpO,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgO,IACfnO,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkO,GAAA7N,KAAAH,KAAMJ,KACDQ,MAAQ,CACT6N,MAAO,GACPC,OAAQ,IAJGrO,EAFvB,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAkO,EAAArO,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAkO,EAAA,EAAA1O,IAAA,YAAA2B,MAAA,SAgBcgN,EAAOC,GACb,IAAMC,EAASF,EAAMxK,OAASwK,EAAM9H,OAAO1E,QAAUwM,EAAM7H,kBAAoB,EAAI,GAC/EgI,EAASF,EAAOzK,OAASyK,EAAO/H,OAAO1E,QAAUyM,EAAO9H,kBAAoB,EAAI,GAEpF,OAAO+H,EAASC,EAASH,EAAM1M,GAAK4M,EAASC,EAASF,EAAO3M,GAAK,OApB1E,CAAAjC,IAAA,SAAA2B,MAAA,WAwBa,IACDgF,EAAKC,EADJjE,EAAAjC,KACSqO,GAAY,EAAEC,EAAW,GACjCC,KAAuBvO,KAAKI,MAAM6N,QAASjO,KAAKI,MAAM8N,QAO5D,OANIK,IACAtI,EAAMjG,KAAKJ,MAAM2E,SAASiC,KAAK,SAACxB,GAAD,OAAQA,EAAGzD,MAAQU,EAAK7B,MAAM6N,QAC7D/H,EAAMlG,KAAKJ,MAAM2E,SAASiC,KAAK,SAACxB,GAAD,OAAQA,EAAGzD,MAAQU,EAAK7B,MAAM8N,SAE7DI,GADAD,EAAWrO,KAAKwO,UAAUvI,EAAKC,IACPD,EAAI1E,IAAK8M,EAAWpI,EAAIhH,KAAKiH,EAAIjH,KAAK,IAG9DR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,qFAGC2P,GAAwB9P,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACpCH,EAAAC,EAAAC,cAAA,MAAIgF,MAAO,CAAC8K,WAAW,QAASJ,EAAW,YAAcC,EAAW,mBAGxE7P,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBqC,MAAOjB,KAAKI,MAAM6N,MACpD1L,SAAU,SAACmM,GAAD,OAAQzM,EAAKT,SAAS,CAAEyM,MAAOS,EAAGpN,OAAOL,UAEnDxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,GAAG+I,UAAQ,GAAzB,gBACChK,KAAKJ,MAAM2E,SAASpF,IAAI,SAAA6F,GAAE,OACvBvG,EAAAC,EAAAC,cAAA,UAASsC,MAAO+D,EAAGzD,GAAIjC,IAAK0F,EAAGzD,GAAIyI,SAAUhF,EAAGzD,IAAIU,EAAK7B,MAAM8N,QAASlJ,EAAG/F,SAGlFsP,GACG9P,EAAAC,EAAAC,cAACgQ,GAAD,CAAiB3H,QAASf,EAAK8H,IAAK9H,EAAI1E,IAAM8M,IAAaA,KAKnE5P,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBqC,MAAOjB,KAAKI,MAAM8N,OACpD3L,SAAU,SAACmM,GAAD,OAAQzM,EAAKT,SAAS,CAAE0M,OAAQQ,EAAGpN,OAAOL,UAEpDxC,EAAAC,EAAAC,cAAA,UAAQsC,MAAM,GAAG+I,UAAQ,GAAzB,iBACChK,KAAKJ,MAAM2E,SAASpF,IAAI,SAAA6F,GAAE,OACvBvG,EAAAC,EAAAC,cAAA,UAAQsC,MAAO+D,EAAGzD,GAAIjC,IAAK0F,EAAGzD,GAAKyI,SAAUhF,EAAGzD,IAAIU,EAAK7B,MAAM6N,OAAQjJ,EAAG/F,SAGjFsP,GACG9P,EAAAC,EAAAC,cAACgQ,GAAD,CAAiB3H,QAASd,EAAK6H,IAAK7H,EAAI3E,IAAM8M,IAAaA,WApEvFL,EAAA,CAA6BlL,IAAMC,WCgHpB6L,GAlHG,CACd,CACIrN,GAAI,GACJtC,KAAM,WACN0K,YAAa,uTACbE,OAAQ,IACRrG,OAAQ,gEACRoG,OAAQ,QACRzD,OAAQ,CAAC,SAAU,sBAAuB,uBAAwB,2BAA4B,qBAC9F1C,OAAQ,EACR2C,mBAAmB,GAEvB,CACI7E,GAAI,GACJtC,KAAM,kBACN0K,YAAa,mJACbE,OAAQ,IACRrG,OAAQ,gUACRoG,OAAQ,QACRzD,OAAQ,CAAC,gBAAiB,6BAA8B,sBAAuB,wBAC/E1C,OAAQ,EACR2C,mBAAmB,GAEvB,CACI7E,GAAI,GACJtC,KAAM,cACN0K,YAAa,sPACbE,OAAQ,IACRrG,OAAQ,iFACRoG,OAAQ,QACRzD,OAAQ,CAAC,2BAA4B,qBAAsB,eAAgB,yBAC3E1C,OAAQ,EACR2C,mBAAmB,GAEvB,CACI7E,GAAI,GACJtC,KAAM,OACN0K,YAAa,+OACbE,OAAQ,IACRrG,OAAQ,uHACRoG,OAAQ,SACRzD,OAAQ,CAAC,SAAU,sBAAuB,uBAAwB,2BAA4B,qBAC9F1C,OAAQ,EACR2C,mBAAmB,GAEvB,CACI7E,GAAI,GACJtC,KAAM,YACN0K,YAAa,oPACbE,OAAQ,IACRrG,OAAQ,iIACRoG,OAAQ,QACRzD,OAAQ,CAAC,eAAgB,iBAAkB,oBAC3C1C,OAAQ,EACR2C,mBAAmB,GAEvB,CACI7E,GAAI,GACJtC,KAAM,iBACN0K,YAAa,8GACbE,OAAQ,IACRrG,OAAQ,6HACRoG,OAAQ,QACRzD,OAAQ,CAAC,mBACT1C,OAAQ,EACR2C,mBAAmB,GAEvB,CACI7E,GAAI,GACJtC,KAAM,OACN0K,YAAa,gUACbE,OAAQ,IACRrG,OAAO,kGACPoG,OAAQ,QACRzD,OAAQ,CAAC,sBAAuB,yBAAyB,0BACzD1C,OAAQ,EACR2C,mBAAmB,GAEvB,CACI7E,GAAI,GACJtC,KAAM,SACN0K,YAAa,sMACbE,OAAQ,IACRrG,OAAQ,uLACRoG,OAAQ,WACRzD,OAAQ,CAAC,YAAY,iBAAiB,yBACtC1C,OAAQ,EACR2C,mBAAmB,GAEvB,CACI7E,GAAI,GACJtC,KAAM,OACN0K,YAAa,mKACbE,OAAQ,IACRrG,OAAQ,gFACRoG,OAAQ,SACRzD,OAAQ,CAAC,oCAAoC,oBAC7C1C,OAAQ,EACR2C,mBAAmB,GAEvB,CACI7E,GAAI,GACJtC,KAAM,aACN0K,YAAa,4TACbE,OAAQ,IACRrG,OAAQ,qjBACRoG,OAAQ,QACRzD,OAAQ,CAAC,mBAAmB,0BAA0B,qBACtD1C,OAAQ,EACR2C,mBAAmB,IC5GdyI,GAAoB,WAC7B,OACIpQ,EAAAC,EAAAC,cAAA,MAAIgF,MAAO,CAACC,UAAU,WAAtB,iDCKKkL,GAAb,SAAAnP,GAEI,SAAAmP,EAAYlP,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8O,IACfjP,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgP,GAAA3O,KAAAH,KAAMJ,KACDQ,MAAQ,CACTmE,SAAU,GACVwK,SAAS,EACTC,OAAQ,IAEZnP,EAAKoP,cAAgBpP,EAAKoP,cAActO,KAAnBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KACrBA,EAAKqP,kBAAoBrP,EAAKqP,kBAAkBvO,KAAvBb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KARVA,EAFvB,OAAAC,OAAAiB,EAAA,EAAAjB,CAAAgP,EAAAnP,GAAAG,OAAAkB,EAAA,EAAAlB,CAAAgP,EAAA,EAAAxP,IAAA,gBAAA2B,MAAA,SAakBkO,GACV,IAAMC,EAACtP,OAAA2L,EAAA,EAAA3L,CAAA,CAAKyB,GAAIvB,KAAKI,MAAMmE,SAAS9C,OAAS,EAAI,IAAO0N,GACxDnP,KAAKwB,SAAS,SAAC4L,GAAD,MAAgB,CAAE7I,SAASzE,OAAAsK,EAAA,EAAAtK,CAAKsN,EAAU7I,UAAhBH,OAAA,CAA0BgL,SAf1E,CAAA9P,IAAA,oBAAA2B,MAAA,SAkBsBoO,GACd,IAAMhQ,EAAIW,KAAKI,MAAMmE,SAAS+K,UAAU,SAAA5Q,GAAC,OAAIA,EAAE6C,KAAO8N,EAAS9N,KAC/DvB,KAAKwB,SAAS,SAAC4L,GAAD,MACV,CACI7I,SAASzE,OAAAsK,EAAA,EAAAtK,CAAKsN,EAAU7I,SAASjB,MAAM,EAAGjE,IAAlC+E,OAAA,CAAsCiL,GAAtCvP,OAAAsK,EAAA,EAAAtK,CAAmDsN,EAAU7I,SAASjB,MAAMjE,EAAI,UAtBxG,CAAAC,IAAA,oBAAA2B,MAAA,WA4BQjB,KAAKuP,cA5Bb,CAAAjQ,IAAA,YAAA2B,MAAA,WA+BgB,IAAAgB,EAAAjC,KACRA,KAAKwB,SAAS,CAAEuN,SAAS,EAAMC,OAAQ,KCvCpC,IAAIQ,QAAQ,SAACC,EAAIC,GAEpB,IAAMC,EAASC,KAAKD,SAEpBE,WAAW,WACJF,EAAO,IACNF,EAAIb,IAEJc,EAAI,CAACI,IAAI,sCAEd,OD+BEC,KAAK,SAAAxL,GAAQ,OAAItC,EAAKT,SAAS,CAAE+C,WAAUwK,SAAS,MACpDiB,MAAM,SAAA1C,GAAG,OAAIrL,EAAKT,SAAS,CAAEwN,OAAQ1B,EAAIwC,KAAOG,KAAKC,UAAU5C,GAAMyB,SAAS,QAnC3F,CAAAzP,IAAA,SAAA2B,MAAA,WAsCa,IAAAkP,EAAAnQ,KAEL,OAAIA,KAAKI,MAAM2O,QACJtQ,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAEnCoB,KAAKI,MAAM4O,OAEPvQ,EAAAC,EAAAC,cAAA,OAAKgF,MAAO,CAAEyM,MAAO,MAAOxM,UAAW,WACnCnF,EAAAC,EAAAC,cAAA,sBAAeqB,KAAKI,MAAM4O,QAC1BvQ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kCAAkCiE,QAAS7C,KAAKuP,UAAU5O,KAAKX,OAAjF,cAIPA,KAAKI,MAAMmE,SAAS9C,OAKrBhD,EAAAC,EAAAC,cAACF,EAAAC,EAAMqG,SAAP,KAGItG,EAAAC,EAAAC,cAAC0R,EAAA,EAAD,KACI5R,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOC,KAAK,aAAaC,OAAQ,SAAC9F,GAAD,OAAWnB,EAAAC,EAAAC,cAAC2R,EAADxQ,OAAA8F,OAAA,CAAWrB,SAAU4L,EAAK/P,MAAMmE,UAAc3E,OAC1FnB,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAQ,SAAC9F,GAAD,OACxBnB,EAAAC,EAAAC,cAAC4R,EAADzQ,OAAA8F,OAAA,CAAMrB,SAAU4L,EAAK/P,MAAMmE,SAAUiF,sBAAuB2G,EAAKjB,mBAAuBtP,OAE5FnB,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOC,KAAK,OAAOC,OAAQ,SAAC9F,GAAD,OAAWnB,EAAAC,EAAAC,cAAC6R,GAAD1Q,OAAA8F,OAAA,CAAK6H,aAAc0C,EAAKlB,eAAmBrP,OACjFnB,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOC,KAAK,WAAWC,OAAQ,SAAC9F,GAAD,OAAWnB,EAAAC,EAAAC,cAAC8R,GAAD,CAASlM,SAAU4L,EAAK/P,MAAMmE,cACxE9F,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOC,KAAK,IAAIiL,OAAK,EAAChL,OAAQ,SAAC9F,GAAD,OAC1BnB,EAAAC,EAAAC,cAACgS,EAAA,EAAD7Q,OAAA8F,OAAA,CAAUnG,GAAG,cAAiBG,OAElCnB,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAOE,OAAQ,kBAAMjH,EAAAC,EAAAC,cAAA,MAAIgF,MAAO,CAAEC,UAAW,WAAxB,kBAjBtBnF,EAAAC,EAAAC,cAACiS,GAAD,UApDnB9B,EAAA,CAAiChM,IAAMC,WEexB8N,eAjBb,SAAAA,EAAYjR,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA6Q,GAAA/Q,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+Q,GAAA1Q,KAAAH,KACZJ,0EAIN,OACEnB,EAAAC,EAAAC,cAACF,EAAAC,EAAMqG,SAAP,KACEtG,EAAAC,EAAAC,cAACmS,EAAD,MACArS,EAAAC,EAAAC,cAACoS,EAAD,MACAtS,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAY+E,MAAO,CAAEqN,UAAW,SAC9CvS,EAAAC,EAAAC,cAACsS,GAAD,eAZQnO,IAAMC,oBCCxBmO,IAASxL,OACLjH,EAAAC,EAAAC,cAACwS,GAAA,EAAD,KACI1S,EAAAC,EAAAC,cAACyS,GAAD,OAEFlQ,SAASmQ,eAAe","file":"static/js/main.d4b60f3c.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport './Header.css';\r\nexport const Header = () => {\r\n    return (\r\n        <header className=\"app-header\">\r\n            <img src='imgs/logo.jpg' alt='logo' />\r\n            <h4>Tour of Avengers</h4>\r\n        </header>\r\n    );\r\n}","\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navbar.css';\r\nconst Navs = [\r\n    { route: '/dashboard', name: 'Dashboard' },\r\n    { route: '/list', name: 'Avengers List' },\r\n    { route: '/add', name: 'Add Avenger' },\r\n    { route: '/compare', name: 'Compare' },\r\n];\r\nexport const Navbar = () => {\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"nav justify-content-center\">\r\n                {Navs.map((link, i) => (\r\n                    <li  key={i}>\r\n                        <NavLink className=\"nav-each\"\r\n                            activeClassName=\"nav-each-active\"\r\n                            to={link.route}>\r\n                            {link.name}\r\n                        </NavLink>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n}","\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Search.css';\r\n\r\nexport class Search extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [],\r\n            showList: false,\r\n            hoveredResultIndex: null,\r\n            input: props.initialSearch || ''\r\n        };\r\n\r\n        this.inputHandler = this.inputHandler.bind(this);\r\n        this.documentClickHandler = this.documentClickHandler.bind(this);\r\n        this.keyboardHandler = this.keyboardHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.documentClickHandler);\r\n        document.addEventListener('keydown', this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.documentClickHandler);\r\n        document.removeEventListener('keydown', this.keyboardHandler);\r\n\r\n\r\n    }\r\n\r\n    documentClickHandler(e) {\r\n        // close the search result list on clicking anywhere on page except the search box\r\n        // also reset the hovered index\r\n        if (e.target.id === 'searchInp') { return; }\r\n        this.setState({ showList: false, hoveredResultIndex: null });\r\n    }\r\n\r\n    keyboardHandler(e) {\r\n        // handle keyboard events only when search input is in focus which is checked by showList, ignore otherwise\r\n\r\n        if (this.state.showList) {\r\n            // on keyUp and keydown events change the highlighted search item\r\n            // on enter key event perform a search based on wheather enter is pressed on hovered item\r\n            // or pressed after writing some text in input \r\n\r\n            if (e.key === 'ArrowDown') {\r\n                this.setState((state) => {\r\n                    const index = state.hoveredResultIndex != null ? state.hoveredResultIndex === state.list.length - 1 ? state.hoveredResultIndex : state.hoveredResultIndex + 1 : 0;\r\n                    return {\r\n                        hoveredResultIndex: index,\r\n                    };\r\n                });\r\n            } else if (e.key === 'ArrowUp') {\r\n                this.setState((state) => {\r\n                    const index = state.hoveredResultIndex != null ? state.hoveredResultIndex === 0 ? state.hoveredResultIndex : state.hoveredResultIndex - 1 : 0;\r\n                    return {\r\n                        hoveredResultIndex: index,\r\n                    };\r\n                });\r\n            } else if (e.key === 'Enter') {\r\n                if (this.state.hoveredResultIndex != null) {\r\n                    this.onSearch(this.state.list[this.state.hoveredResultIndex].name);\r\n                } else {\r\n                    this.onSearch(this.state.input);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    inputHandler(e) {\r\n        const search = e.target.value;\r\n        this.setState({\r\n            input: search,\r\n            list: search.trim() !== '' ? this.props.list.filter(x => x.name.toLowerCase().includes(search.toLowerCase().trim())) : [],\r\n        });\r\n    }\r\n\r\n\r\n    onSearch(search) {\r\n        if (search && search.trim() !== '') {\r\n            this.props.onSearch(search);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        // decide wheather search list shud be visible or hidden\r\n        const resultClasses = 'searchResults ' +\r\n            (this.state.showList && this.state.list.length > 0 ? 'searchResultsShow' : 'searchResultsHide');\r\n\r\n        return (\r\n                <form className=\"form\">\r\n                            <input type=\"search\" className=\"searchInput form-control\" id=\"searchInp\" value={this.state.input}\r\n                            placeholder=\"Search Avenger\"\r\n                                autoComplete=\"off\"\r\n                                autoCorrect=\"off\"\r\n                                onChange={this.inputHandler}\r\n                                onFocus={(e) => this.setState({ showList: true })}\r\n                            ></input>\r\n                  \r\n                    <ul className={resultClasses}>\r\n                        {this.state.list.map((a, i) => (\r\n                            <SearchResultItem key={a.id}\r\n                                hovered={i === this.state.hoveredResultIndex}\r\n                                item={a.name} matchedPart={this.state.input}\r\n                                onClick={(e) => { this.onSearch(a.name) }} />\r\n                        ))}\r\n                    </ul>\r\n                </form>\r\n        );\r\n    }\r\n};\r\n\r\nSearch.propTypes = {\r\n    currentSearch: PropTypes.string,\r\n    list: PropTypes.array.isRequired\r\n};\r\n\r\n\r\n/**\r\n * SearchResultItem renders the individul search result string with the matched part in bold\r\n * @param {string} item : search result\r\n * @param {string} matchedPart : part of serch result that is to be rendered in bold\r\n */\r\nconst SearchResultItem = ({ hovered, item, matchedPart, onClick }) => {\r\n    const trimmedMatch = matchedPart.trim();\r\n    const strt = item.toLowerCase().indexOf(trimmedMatch.toLowerCase()),\r\n        end = strt + trimmedMatch.length;\r\n    return (\r\n        <li className={'searchResultItem ' + (hovered ? 'hoveredSearchResultItem' : '')} onClick={onClick}>\r\n            {item.slice(0, strt)}<b>{item.slice(strt, end)}</b>{item.slice(end)}\r\n        </li>\r\n    );\r\n\r\n};\r\n","import React from 'react';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport { Link } from 'react-router-dom'\r\nexport const SearchedAvenger = ({ id, name, imgUrl, rating, history }) => {\r\n\r\n    if (!name) {\r\n        return (\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <h3>Oops !...</h3>\r\n                <h4>Avenger with the given name doesn't exist yet.</h4>\r\n                <h4>But, you can create one. <Link to=\"/add\">Create</Link></h4>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\" }}>\r\n            <div className=\"card\" style={{width:'50%',display:'inline-block'}}>\r\n                <img className=\"card-img-top\" style={{ height: '200px' }} src={imgUrl} alt=\"Avenger pic\" />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\" style={{margin:0}}>{name}</h5>\r\n                    <StarRatingComponent\r\n                        name=\"rate1\"\r\n                        editing={false}\r\n                        value={rating}\r\n                    />\r\n                    <p>To view more infomation <Link to={`/list/${id}`} >Click Here</Link></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './Dashboard.css';\r\nimport { Search } from '../../components/Search/Search';\r\nimport { SearchedAvenger } from './SearchedAvenger/SearchedAvenger';\r\n\r\nlet searchComponentKey = 0;\r\n\r\nexport const Dashboard = ({ avengers, match, location, history }) => {\r\n\r\n\r\n    const top4 = giveTopFourAvengers(avengers);\r\n    const initialSearch = getSearchStringFromUrl(location);\r\n    const searchResult = findSearchedAvenger(initialSearch, avengers);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h4>Top Avengers</h4>\r\n            <div className=\"row\">\r\n                {top4.map(av => (\r\n                    <div key={av.id} className=\"col-6 col-md-3\"\r\n                        style={{ cursor: 'pointer' }} title=\"Click to view Details\"\r\n                        onClick={() => onTopAvengerClick(history, av.id)}\r\n                    >\r\n                        <div className=\"card\" style={{minHeight:'150px'}}>\r\n                            <img className=\"card-img-top shortImg\" src={av.imgUrl} alt=\"Avenger Img\" />\r\n                            <div className=\"card-body cardBody\">\r\n                                <h5 className=\"card-title\">{av.name}</h5>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <Search list={avengers} initialSearch={initialSearch} key={++searchComponentKey}\r\n                onSearch={(searchString) => onAvengerSearch(searchString, history, match)} />\r\n\r\n            <Route path={`${match.path}/search`}\r\n                render={(props) =>\r\n                    <SearchedAvenger {...props}\r\n                        id={searchResult.id}\r\n                        name={searchResult.name}\r\n                        imgUrl={searchResult.imgUrl}\r\n                        rating={searchResult.rating}\r\n                    />\r\n                }>\r\n            </Route>\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n// code related to top avengers\r\nconst onTopAvengerClick = (history, id) => {\r\n    history.push(`/list/${id}`);\r\n};\r\n\r\n// TODO : optimize below algorithm later\r\nconst giveTopFourAvengers = (avengers) => {\r\n    return avengers.sort((a, b) => isFirstPopularThanSecond(a, b) ? -1 : 1).slice(0, 4);\r\n};\r\n\r\n/**@returns true if first avenger is more/equal popular to second one, false otherwise*/\r\nconst isFirstPopularThanSecond = (av1, av2) => {\r\n\r\n    const p1 = av1.rating + av1.powers.length + (av1.hasDedicatedMovie ? 1 : 0),\r\n        p2 = av2.rating + av2.powers.length + (av2.hasDedicatedMovie ? 1 : 0);\r\n\r\n    return p1 >= p2;\r\n};\r\n\r\n// CODE RELATED TO SEARCH AVENGER\r\nconst onAvengerSearch = (searchString, history, match) => {\r\n    history.push(`${match.path}/search?q=${searchString}`);\r\n};\r\n\r\nconst getSearchStringFromUrl = (location) => {\r\n    const searchParam = new URLSearchParams(location.search);\r\n    return searchParam.get('q') || '';\r\n};\r\n\r\nconst findSearchedAvenger = (search, avengers) => {\r\n    const s = search.trim();\r\n    return avengers.find(av => s.toLowerCase() === av.name.toLowerCase()) || {};\r\n}\r\n\r\n","import React from 'react';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\n\r\nexport const ListItem = (props) => {\r\n\r\n    const { isSelected, onClick } = props;\r\n    return (\r\n        <li style={{ backgroundColor: isSelected ? '#dae0e5' : 'transparent' }} onClick={() => onClick()}>\r\n            <img src={props.children.imgUrl || 'imgs/defaultPic.jpg'} alt=\"Avenger Img\" />\r\n            <h5>{props.children.name}</h5>\r\n            <StarRatingComponent\r\n                name=\"rate1\"\r\n                editing={false}\r\n                value={props.children.rating}\r\n            />\r\n        </li>\r\n    );\r\n}","import React from 'react';\r\nimport { ListItem } from '../Listitem/ListItem';\r\n\r\n/**Component that iterates over avengers list and listens for click event on individual avenger */\r\nexport const ListOnly = ({ avengers,onAvengerClick,selectedId}) => {\r\n\r\n    return (\r\n            <ul >\r\n                {avengers.map(avenger =>\r\n                    <ListItem key={avenger.id}\r\n                        isSelected={avenger.id === selectedId}\r\n                        onClick={() => onAvengerClick(avenger.id)}>\r\n                        {avenger}\r\n                    </ListItem>\r\n                )}\r\n            </ul>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddPower extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            newPower: ''\r\n        };\r\n\r\n        this.inputRef = React.createRef();\r\n\r\n        this.handleAddPower = this.handleAddPower.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) { this.setState({ newPower: e.target.value }); }\r\n\r\n    handleAddPower(e) {\r\n        if (this.state.newPower.trim() !== '') {\r\n            this.props.onAddPower(this.state.newPower);\r\n            this.setState({newPower:''});\r\n            this.inputRef.current.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <input  style={{width:'80%'}} type=\"text\" value={this.state.newPower}\r\n                    placeholder='Add Power' ref={this.inputRef}\r\n                    onChange={this.handleChange} />\r\n                <button  className=\"btn btn-sm btn-primary\" type='button' onClick={this.handleAddPower}>Add</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddPower.proptypes = {\r\n    onAddPower: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { AddPower } from './AddPower/AddPower';\r\n\r\nexport class Power extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.powerListRef = React.createRef();\r\n        this.listStyles = {\r\n            width: '80%',\r\n            listStyleType: 'decimal',\r\n            maxHeight: '200px',\r\n            overflow: 'auto',\r\n            border: '1px solid rgb(0,0,0,0.1)',\r\n            boxShadow: '5px 5px 10px #d3d3d3',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.scrollPowerList();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // scroll only when a new power is added to list\r\n        // below condition is neccessary, otherwise list will be scrolled on each key stroke \r\n        // of newPower input\r\n        if (this.props.powers.length !== prevProps.powers.length) {\r\n            this.scrollPowerList();\r\n        }\r\n    }\r\n\r\n\r\n    scrollPowerList() {\r\n        const ulElement = this.powerListRef.current;\r\n        ulElement.scrollTop = ulElement.scrollHeight;\r\n    }\r\n\r\n\r\n    render() {\r\n        const existingPowers = this.props.powers;\r\n        return (\r\n            <div>{this.props.allowAdd ?\r\n                <AddPower onAddPower={(addedPower) => this.props.onAddPower(addedPower)} />\r\n                : null\r\n            }\r\n\r\n                <ul ref={this.powerListRef} style={this.listStyles} >\r\n                    {existingPowers.map((power, index) => (\r\n                        <li key={index}>{power}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nPower.propTypes = {\r\n    powers: PropTypes.array.isRequired,\r\n    onAddPower: PropTypes.func // required only when allowAdd is true\r\n};\r\n\r\nPower.defaultProps = {\r\n    allowAdd: false\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Power } from '../Powers/Powers';\r\nimport './AvengerDetail.css';\r\n\r\nexport class AvengerDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //set empty initial state here as intial state will be set by getDerivedStateFromProps\r\n        this.state = {};\r\n        this.saveBtnHandler = this.saveBtnHandler.bind(this);\r\n        this.isInfoChanged = this.isInfoChanged.bind(this);\r\n    }\r\n\r\n    /**Called every time before render method including the first render */\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.avenger && (props.avenger.id !== state.id)) {\r\n            // in case selected avenger has been changed\r\n            // reset the state with new info\r\n            const newState = {\r\n                id: props.avenger.id, // used only for updating state when selected avenger changes, not being used in html\r\n                hasDedicatedMovie: props.avenger.hasDedicatedMovie,\r\n                rating: props.avenger.rating,\r\n                powers: props.avenger.powers,\r\n                // stateCopy stores the intial state of each avenger, so that we can check onsave btn \r\n                // that any changes have been done or not\r\n                stateCopy: {\r\n                    id: props.avenger.id,\r\n                    hasDedicatedMovie: props.avenger.hasDedicatedMovie,\r\n                    rating: props.avenger.rating,\r\n                    powers: props.avenger.powers,\r\n                }\r\n            };\r\n\r\n            return newState;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    saveBtnHandler() {\r\n        if (this.isInfoChanged()) {\r\n            this.props.onAvengerDetailEdited(\r\n                Object.assign(this.props.avenger, {\r\n                    hasDedicatedMovie: this.state.hasDedicatedMovie,\r\n                    rating: this.state.rating,\r\n                    powers: this.state.powers\r\n                }));\r\n            alert('Info Changed Successfully');\r\n        } else {\r\n            alert('No Changes to save');\r\n        }\r\n    }\r\n\r\n    isInfoChanged() {\r\n        return this.state.hasDedicatedMovie !== this.state.stateCopy.hasDedicatedMovie ||\r\n            this.state.rating !== this.state.stateCopy.rating ||\r\n            this.state.powers.length !== this.state.stateCopy.powers.length;\r\n    }\r\n\r\n    render() {\r\n        const av = this.props.avenger;\r\n        return (\r\n            !av ?\r\n                <div>Avenger with given ID doesn't exists yet. But you can add one.</div> :\r\n                <div className=\"card avenger-detail\">\r\n                    <img className=\"card-img-top\" style={{ height: '200px' }} src={av.imgUrl} alt=\"Avenger\" />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{av.name}</h5>\r\n                        <p className=\"card-text\">{av.description}</p>\r\n                        <p className=\"card-text\"><b>Planet : </b>{av.planet}</p>\r\n                        <p className=\"card-text\"><b>Gender : </b>{av.gender === 'M' ? 'Male' : 'Female'}</p>\r\n                        <p className=\"card-text\"><label htmlFor=\"hasMovie\"><b>Has Dedicated Movie : </b></label>\r\n                            <input type=\"checkbox\" checked={this.state.hasDedicatedMovie} id=\"hasMovie\"\r\n                                name='hasDedicatedMovie'\r\n                                onChange={(e) => this.setState({ hasDedicatedMovie: e.target.checked })}\r\n                            />\r\n                        </p>\r\n                        <p className=\"card-text\"><b>Rating : </b>\r\n                            <select value={this.state.rating}\r\n                                name='rating'\r\n                                onChange={(e) => { this.setState({ rating: +e.target.value }) }}>\r\n                                <option value='0' disabled>Select Rating</option>\r\n                                <option value='1'>1</option>\r\n                                <option value='2'>2</option>\r\n                                <option value='3'>3</option>\r\n                                <option value='4'>4</option>\r\n                                <option value='5'>5</option>\r\n                            </select>\r\n                        </p>\r\n                        <p className=\"card-text\"><b>Powers : </b></p>\r\n\r\n                        <Power powers={this.state.powers}\r\n                            allowAdd={true}\r\n                            onAddPower={(newP) => { this.setState((prevstate) => ({ powers: [...prevstate.powers, newP] })) }}\r\n                        />\r\n                        <button type=\"button\" className=\"btn btn-sm btn-primary\" onClick={this.saveBtnHandler}>Save Changes</button>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n    \r\n        );\r\n}\r\n}\r\n\r\n\r\nAvengerDetail.propTypes = {\r\n    avenger: PropTypes.object,\r\n};\r\n","\r\nimport React from 'react';\r\n\r\nexport const Sort = ({ appliedSort, onSortSelect }) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h5>Sort {appliedSort &&  <i className=\"fa fa-check\" aria-hidden=\"true\"></i>}</h5>\r\n            <select value={appliedSort} onChange={(e) => onSortSelect(e.target.value)} >\r\n                <option value=\"\" disabled>Select Sorting</option>\r\n                <option value=\"name\">Name</option>\r\n                <option value=\"lh\">Rating (Low to High)</option>\r\n                <option value=\"hl\">Rating (High to Low)</option>\r\n            </select>\r\n        </React.Fragment>\r\n    );\r\n}","\r\nimport React from 'react';\r\n\r\nexport const Filter = ({ appliedFilter, onFilterSelect }) => {\r\n\r\n    // applied filters' values are recieved form search params which are always in string\r\n    // hence dp little extra work inside checked attribute\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <h5>Filter {isFilterApplied(appliedFilter) && <i className=\"fa fa-check\" aria-hidden=\"true\"></i>}</h5>\r\n            <label htmlFor=\"earth\">\r\n                <input id=\"earth\" type=\"checkbox\" checked={appliedFilter.earth === 'true'}\r\n                    onChange={(e) => onFilterSelect({ earth: e.target.checked, movie: appliedFilter.movie })}\r\n                /> From Earth\r\n            </label>\r\n            <label htmlFor=\"movie\">\r\n                <input id=\"movie\" type=\"checkbox\" checked={appliedFilter.movie === 'true'}\r\n                    onChange={(e) => onFilterSelect({ earth: appliedFilter.earth, movie: e.target.checked })}\r\n                /> Has Dedicated Movie\r\n            </label>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nconst isFilterApplied = (appliedFilter) => {\r\n    return appliedFilter.movie || appliedFilter.earth;\r\n}","import React from 'react';\r\nimport './list.css';\r\nimport { Route, matchPath } from 'react-router-dom'\r\nimport { ListOnly } from './ListOnly/ListOnly';\r\nimport { AvengerDetail } from '../../components/AvengerDetail/AvengerDetail';\r\nimport { Sort } from '../../components/Sort/Sort';\r\nimport { Filter } from '../../components/Filter/Filter';\r\n\r\n\r\n/**Main component for all routes starting from '/list' */\r\nexport const List = ({ avengers, match, location, history, onAvengerDetailEdited }) => {\r\n\r\n    // since List component is routed by path '/list', which does not include any parameter\r\n    // we can't get the id in the url using match.params.id.\r\n    // Hence, in order to get the id from url we need to\r\n    // use matchPath function, which is used by react-router itself internally\r\n    const m = matchPath(location.pathname, {\r\n        path: `${match.path}/:id`\r\n    });\r\n    // match can be null, hence apply check\r\n    const selectedId = m && m.params.id ? +m.params.id : null;\r\n\r\n    // set selectedAvenger data\r\n    const selectedAvenger = selectedId ? avengers.find(av => selectedId === av.id) || null : null;\r\n\r\n    // get applied sort and filter info\r\n    const sortFilterParams = getSearchParams(location);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row sort-filter\" >\r\n                <div className=\"col-xs-12 col-sm-6 sort\">\r\n                    <Sort appliedSort={sortFilterParams.sort}\r\n                        onSortSelect={(sort) => onSortFilter({ ...sortFilterParams, sort }, match, history)} />\r\n                </div>\r\n                <div className=\"col-xs-12 col-sm-6 filter\">\r\n                    <Filter appliedFilter={{ earth: sortFilterParams.earth, movie: sortFilterParams.movie }} className=\"col-6 \"\r\n                        onFilterSelect={(filters) => onSortFilter({ ...sortFilterParams, ...filters }, match, history)} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\" style={{paddingTop:'25px'}}>\r\n                <div className=\"col-xs-12 col-sm-6 avenger-list\">\r\n                    <ListOnly avengers={getFilteredSortedList(avengers, sortFilterParams)}\r\n                        selectedId={selectedId}\r\n                        onAvengerClick={(id) => onAvengerClick(id, sortFilterParams, match, history)}\r\n                    />\r\n                </div>\r\n                <div className=\" col-xs-12 col-sm-6\">\r\n                    <Route path={`${match.path}/:id`}\r\n                        render={(props) => <AvengerDetail avenger={selectedAvenger} onAvengerDetailEdited={onAvengerDetailEdited} />} />\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst onAvengerClick = (id, params, match, history) => {\r\n    const searchString = getSearchParamsString(params);\r\n    history.push(`${match.path}/${id}/?${searchString}`);\r\n};\r\n\r\nconst onSortFilter = (params, match, history) => {\r\n    const searchString = getSearchParamsString(params);\r\n    history.push(`${match.path}/?${searchString}`);\r\n};\r\n\r\nconst getSearchParams = (location) => {\r\n    const searchParam = new URLSearchParams(location.search);\r\n    return {\r\n        sort: searchParam.get('sort') || '',\r\n        earth: searchParam.get('earth') || false,\r\n        movie: searchParam.get('movie') || false,\r\n    };\r\n}\r\n\r\nconst getSearchParamsString = (params) => {\r\n    const searchParam = new URLSearchParams();\r\n    if (params.sort) { searchParam.set('sort', params.sort); }\r\n    if (params.earth) { searchParam.set('earth', params.earth); }\r\n    if (params.movie) { searchParam.set('movie', params.movie); }\r\n    return searchParam.toString();\r\n}\r\n\r\nconst getFilteredSortedList = (list, sfParam) => {\r\n    let fList = list;\r\n    if (sfParam.earth) {\r\n        fList = fList.filter(a => a.planet === 'Earth');\r\n    }\r\n    if (sfParam.movie) {\r\n        fList = fList.filter(a => a.hasDedicatedMovie);\r\n    }\r\n    if (sfParam.sort) {\r\n        if (sfParam.sort === 'name') {\r\n            fList = fList.sort((a, b) => a.name <= b.name ? -1 : 1);\r\n        } else if (sfParam.sort === 'lh') {\r\n            fList = fList.sort((a, b) => a.rating <= b.rating ? -1 : 1);\r\n        } else if (sfParam.sort === 'hl') {\r\n            fList = fList.sort((a, b) => a.rating >= b.rating ? -1 : 1);\r\n        }\r\n    }\r\n\r\n    return fList;\r\n};","import React from 'react';\r\nimport { Power } from '../../components/Powers/Powers';\r\nimport PropTypes from 'prop-types'\r\nimport './Add.css';\r\n\r\nexport class Add extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            description: '',\r\n            planet: '',\r\n            gender: '',\r\n            powers: [],\r\n            imgUrl: '',\r\n            rating: 0,\r\n            hasDedicatedMovie: false,\r\n            invalidMsg: ''\r\n        };\r\n        this.fileRef = React.createRef();\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleImgUpload = this.handleImgUpload.bind(this);\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n        this.onAddPowerHandler = this.onAddPowerHandler.bind(this);\r\n\r\n    }\r\n\r\n    handleChange(e) {\r\n        const control = e.target.name;\r\n\r\n        if (control === 'name' || control === 'description' || control === 'planet' ||\r\n            control === 'rating' || control === 'gender') {\r\n            this.setState({ [control]: control === 'rating' ? +e.target.value : e.target.value });\r\n        } else if (control === 'hasDedicatedMovie') {\r\n            this.setState({ hasDedicatedMovie: e.target.checked });\r\n        }\r\n    }\r\n\r\n    handleImgUpload(e) {\r\n        if (!e.target.files.length) { return; }\r\n        const file = e.target.files[0];\r\n        if (this.state.imgUrl) {\r\n            window.URL.revokeObjectURL(this.state.imgUrl);\r\n        }\r\n        this.setState({ imgUrl: window.URL.createObjectURL(file) });\r\n    }\r\n\r\n    onAddPowerHandler(newPower) {\r\n\r\n        this.setState((prevState) => ({\r\n            powers: [...prevState.powers, newPower]\r\n        }));\r\n    }\r\n\r\n    submitHandler(e) {\r\n        e.preventDefault();\r\n        const err = this.giveInvalidMsg();\r\n        if (err) {\r\n            this.setState({ invalidMsg: err });\r\n        } else {\r\n            // reset state\r\n            this.setState({\r\n                name: '',\r\n                description: '',\r\n                planet: '',\r\n                gender: '',\r\n                powers: [],\r\n                imgUrl: '',\r\n                rating: 0,\r\n                hasDedicatedMovie: false,\r\n                invalidMsg: ''\r\n            });\r\n            // since invalidMsg property is not needed in newAvengerInfo\r\n            // hence make a new copy and delete it from that\r\n            // in below line, this.state still contains the old info as this.setState()\r\n            // is asynchronous and will be called after the current stack gets empty\r\n            const newAvengerData = Object.assign({}, this.state);\r\n            delete newAvengerData.invalidMsg;\r\n            // add new avenger to avengers list present in parent component\r\n            this.props.onAddAvenger(newAvengerData);\r\n            alert('Avenger added successfully');\r\n        }\r\n    }\r\n\r\n    giveInvalidMsg() {\r\n        for (const x in this.state) {\r\n            if (x !== 'invalidMsg' && x !== 'powers' && x !== 'hasDedicatedMovie' && x !== 'imgUrl') {\r\n                if (!this.state[x]) {\r\n                    return `${x.toUpperCase()} is required`;\r\n                }\r\n            } else if (x === 'powers' && !this.state[x].length) {\r\n                return 'Please provide atleast one power';\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <form onSubmit={this.submitHandler} className=\"add\" >\r\n\r\n                <label htmlFor=\"name\" className=\"form-field\">Name : </label>\r\n                <input type=\"text\" value={this.state.name}\r\n                    placeholder='Enter Name'\r\n                    name='name' id=\"name\" className=\"form-field\"\r\n                    onChange={this.handleChange}\r\n                />\r\n\r\n                <label htmlFor=\"description\" className=\"form-field\">Description : </label>\r\n                <textarea type=\"textarea\" value={this.state.description}\r\n                    placeholder='Enter Description'\r\n                    name='description' id=\"description\"\r\n                    onChange={this.handleChange} className=\"form-field\"\r\n                ></textarea>\r\n\r\n                <label htmlFor=\"planet\" className=\"form-field\">Planet : </label>\r\n                <input type=\"text\" value={this.state.planet}\r\n                    placeholder='Enter Planet'\r\n                    name='planet' id=\"planet\"\r\n                    onChange={this.handleChange} className=\"form-field\"\r\n                />\r\n\r\n                <label className=\"form-field\">Gender : </label>\r\n                <div className=\"form-field gender\">\r\n                    <div >\r\n                        <input type=\"radio\" id=\"m\" checked={this.state.gender === 'M'}\r\n                            value='M'\r\n                            name='gender'\r\n                            onChange={this.handleChange}\r\n                        /><label htmlFor=\"m\">Male</label>\r\n                    </div>\r\n                    <div >\r\n                        <input type=\"radio\" id=\"f\" checked={this.state.gender === 'F'}\r\n                            value='F'\r\n                            name='gender'\r\n                            onChange={this.handleChange}\r\n                        /><label htmlFor=\"f\">Female</label>\r\n                    </div>\r\n                </div>\r\n                <label htmlFor=\"hasMovie\" className=\"form-field movie-label\">Has Dedicated Movie ?  </label>\r\n                <div className=\"form-field\">\r\n                    <input type=\"checkbox\" id=\"hasMovie\" checked={this.state.hasDedicatedMovie}\r\n                        name='hasDedicatedMovie'\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <label htmlFor=\"rating\" className=\"form-field\">Rating : </label>\r\n                <select value={this.state.rating}\r\n                    name='rating' id=\"rating\"\r\n                    onChange={this.handleChange} className=\"form-field\"\r\n                >\r\n                    <option value='0' disabled>Select Rating</option>\r\n                    <option value='1'>1</option>\r\n                    <option value='2'>2</option>\r\n                    <option value='3'>3</option>\r\n                    <option value='4'>4</option>\r\n                    <option value='5'>5</option>\r\n                </select>\r\n\r\n                <input type=\"file\" accept=\"image/*\" style={{ display: 'none' }} ref={this.fileRef} onChange={this.handleImgUpload}></input>\r\n                <div className=\"form-field\">\r\n\r\n                    <button type=\"button\" className=\" btn btn-primary\"\r\n                        onClick={() => this.fileRef.current.click()}>\r\n                        {this.state.imgUrl ? 'Change Image' : 'Upload Image'}</button>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <img src={this.state.imgUrl || 'imgs/defaultPic.jpg'} alt=\"Avenger Img\"\r\n                    />\r\n                </div>\r\n\r\n                <label className=\"form-field\">Powers :  </label>\r\n                <div className=\"form-field\">\r\n                    <Power powers={this.state.powers}\r\n                        allowAdd={true}\r\n                        onAddPower={this.onAddPowerHandler}\r\n                    />\r\n                </div>\r\n\r\n                {this.state.invalidMsg ?\r\n                    <div className=\"alert alert-danger\" style={{ width: '70%', textAlign: 'center' }}>\r\n                        {this.state.invalidMsg}\r\n                    </div>\r\n                    : null\r\n                }\r\n\r\n                <div style={{ width: '70%', textAlign: 'center' }}>\r\n                    <button style={{ width: '50%' }} type=\"submit\" className='btn btn-success'>Submit</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nAdd.proptypes = {\r\n    onAddAvenger: PropTypes.func.isRequired\r\n};","\r\nimport React from 'react';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport './Compare.css';\r\nconst ComparedAvenger = ({ avenger, won }) => {\r\n\r\n\r\n    return (\r\n        <div className={'card av-cmp-card '+(won?'av-cmp-card-winner':'av-cmp-card-loser')}>\r\n            <img className=\"card-img-top\" style={{ height: '200px' }} src={avenger.imgUrl} alt=\"Avenger pic\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{avenger.name}</h5>\r\n                <div>\r\n                    <h6 className=\"cmp-property\">Has Dedicated Movie </h6>\r\n                    <i className={\"cmp-value fa \" + (avenger.hasDedicatedMovie ? \"fa-check\" : \"fa-times\")}></i>\r\n                </div>\r\n                <div> <h6 className=\"cmp-property\"> Rating :</h6>\r\n                    <StarRatingComponent\r\n                    className=\"cmp-value\"\r\n                        name=\"rate1\"\r\n                        editing={false}\r\n                        value={avenger.rating}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <h6 className=\"cmp-property\">Total Powers : </h6>\r\n                    <div className=\"cmp-value\" style={{textAlign:'right'}}>\r\n                    <span >{avenger.powers.length}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ComparedAvenger;","import React from 'react';\r\nimport ComparedAvenger from './ComparedAvenger';\r\n\r\n\r\nexport class Compare extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            first: '',\r\n            second: '',\r\n            // showComapredAvengers: false\r\n        };\r\n\r\n        // this.selectChangeHandler =this.selectChangeHandler.bind(this);\r\n    }\r\n\r\n\r\n\r\n    // returns the id of winner avenger, return null if there is a draw\r\n    getWinner(first, second) {\r\n        const score1 = first.rating + first.powers.length + (first.hasDedicatedMovie ? 1 : 0),\r\n            score2 = second.rating + second.powers.length + (second.hasDedicatedMovie ? 1 : 0);\r\n\r\n        return score1 > score2 ? first.id : score1 < score2 ? second.id : null;\r\n    }\r\n\r\n\r\n    render() {\r\n        let av1, av2, winnerId = -1,winnerName='';\r\n        const showComapredAvengers = this.state.first && this.state.second ? true : false;\r\n        if (showComapredAvengers) {\r\n            av1 = this.props.avengers.find((av) => av.id === +this.state.first);\r\n            av2 = this.props.avengers.find((av) => av.id === +this.state.second);\r\n            winnerId = this.getWinner(av1, av2);\r\n            winnerName = winnerId ? av1.id ==winnerId ? av1.name:av2.name:'';\r\n        }\r\n        return (\r\n            <div className=\"pt-2\">\r\n                <div className=\"alert alert-info\">\r\n                    Winner is calculated based on the Rating, Powers and Dedicated movie of avengers.\r\n        </div>\r\n                {showComapredAvengers && <div className=\"pt-2 text-center\" >\r\n                    <h3 style={{fontWeight:'600'}}>{winnerId ? 'Winner : ' + winnerName:'This is a Draw'}</h3>\r\n                </div>\r\n                }\r\n                <div className=\"row pt-2\">\r\n                    <div className=\"col-6\">\r\n                        <select className=\"form-control mb-2\" value={this.state.first}\r\n                            onChange={(ev) => this.setState({ first: ev.target.value })}\r\n                        >\r\n                            <option value=\"\" disabled>Select First</option>\r\n                            {this.props.avengers.map(av =>\r\n                                <option  value={av.id} key={av.id} disabled={av.id==this.state.second}>{av.name}</option>\r\n                            )}\r\n                        </select>\r\n                        {showComapredAvengers &&\r\n                            <ComparedAvenger avenger={av1} won={av1.id == winnerId || !winnerId} />\r\n                        }\r\n                    </div>\r\n\r\n\r\n                    <div className=\"col-6\">\r\n                        <select className=\"form-control mb-2\" value={this.state.second}\r\n                            onChange={(ev) => this.setState({ second: ev.target.value })}\r\n                        >\r\n                            <option value=\"\" disabled>Select Second</option>\r\n                            {this.props.avengers.map(av =>\r\n                                <option value={av.id} key={av.id}  disabled={av.id==this.state.first}>{av.name}</option>\r\n                            )}\r\n                        </select>\r\n                        {showComapredAvengers &&\r\n                            <ComparedAvenger avenger={av2} won={av2.id == winnerId || !winnerId} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\n\r\n const Avengers = [\r\n    {\r\n        id: 11,\r\n        name: 'Iron Man',\r\n        description: 'A wealthy American business magnate, playboy, and ingenious scientist, Anthony Edward \"Tony\" Stark suffers a severe chest injury during a kidnapping. When his captors attempt to force him to build a weapon of mass destruction, he instead creates a powered suit of armor to save his life and escape captivity.',\r\n        gender: 'M',\r\n        imgUrl: 'https://marciokenobi.files.wordpress.com/2013/03/iron_man.jpg',\r\n        planet: 'Earth',\r\n        powers: ['Flight', 'Hand-to-hand combat', ' Superhuman strength', ' Artificial intelligence', 'Quantum Mechanics'],\r\n        rating: 5,\r\n        hasDedicatedMovie: true\r\n    },\r\n    {\r\n        id: 12,\r\n        name: 'Captain America',\r\n        description: 'Patriotic supersoldier who often fought the Axis powers of World War II and was Timely Comics\\' most popular character during the wartime period.',\r\n        gender: 'M',\r\n        imgUrl: 'https://c-5uwzmx78pmca09x24quoqfx2ezivsmzx2ekwu.g00.ranker.com/g00/3_c-5eee.zivsmz.kwu_/c-5UWZMXPMCA09x24pbbx78ax3ax2fx2fquoqf.zivsmz.kwux2fcamz_vwlm_quox2f12x2f447941x2fwzqoqvitx2fkix78biqv-iumzqki-x78pwbw-c35x3fex3d068x26px3d068x26nqbx3dkzwx78x26kzwx78x3dnikmax26yx3d38x26nubx3drx78ox26q98k.uizsx3dquiom_$/$/$/$/$/$',\r\n        planet: 'Earth',\r\n        powers: ['Great Fighter', 'Has indesctructible shield', 'Hand-to-hand combat', 'Patriotic and honest'],\r\n        rating: 4,\r\n        hasDedicatedMovie: true\r\n    },\r\n    {\r\n        id: 15,\r\n        name: 'Black Widow',\r\n        description: ' She is the first costumed, superpowered female comic book character. An antiheroine who kills evildoers in order to deliver their souls to Satan, her master, she first appears in Mystic Comics #4, published by Marvel predecessor Timely Comics',\r\n        gender: 'F',\r\n        imgUrl: 'https://frpnet.net/wp-content/uploads/2019/01/black-widow-rrated-1-660x330.jpg',\r\n        planet: 'Earth',\r\n        powers: ['Undefined psychic powers', 'enhanced endurance', 'invisibility', 'appearance alteration'],\r\n        rating: 3,\r\n        hasDedicatedMovie: false\r\n    },\r\n    {\r\n        id: 13,\r\n        name: 'Thor',\r\n        description: 'Based on the Norse mythological deity of the same name, is the Asgardian god of thunder and possesses the enchanted hammer Mjolnir, which grants him the ability of flight and weather manipulation amongst his other superhuman attributes.',\r\n        gender: 'M',\r\n        imgUrl: 'https://cdn2.coachmag.co.uk/sites/coachmag/files/styles/16x9_480/public/thor2.jpg?itok=hLqpxzjL&timestamp=1383734371',\r\n        planet: 'Asgard',\r\n        powers: ['Flight', 'Hand-to-hand combat', ' Superhuman strength', ' Artificial intelligence', 'Quantum Mechanics'],\r\n        rating: 5,\r\n        hasDedicatedMovie: true\r\n    },\r\n    {\r\n        id: 14,\r\n        name: 'Spiderman',\r\n        description: 'Spider-Man is the alias of Peter Parker, an orphan raised by his Aunt May and Uncle Ben in New York City after his parents Richard and Mary Parker were killed in a plane crash. Created by writer-editor Stan Lee and writer-artist Steve Ditko.',\r\n        gender: 'M',\r\n        imgUrl: 'https://www.pinkvilla.com/files/styles/fbimagesection/public/spider-man-far-from-home-occupancy-report-india.jpg?itok=oTfjPzth',\r\n        planet: 'Earth',\r\n        powers: ['Precognition', 'Healing factor', 'Superhuman speed'],\r\n        rating: 3,\r\n        hasDedicatedMovie: true\r\n    },\r\n    {\r\n        id: 16,\r\n        name: 'Wanda Maximoff',\r\n        description: 'Wanda Maximoff is a fictional character, whose code name is Scarlet Witch, in the Marvel Cinematic Universe',\r\n        gender: 'F',\r\n        imgUrl: 'https://orig00.deviantart.net/5e82/f/2018/014/c/f/curiosity_1_2__wanda_maximoff_x_male_reader__by_writerantics-dbzxlic.jpg',\r\n        planet: 'Earth',\r\n        powers: ['Reality warping'],\r\n        rating: 2,\r\n        hasDedicatedMovie: false\r\n    },\r\n    {\r\n        id: 18,\r\n        name: 'Hulk',\r\n        description: 'The character is both the Hulk, a green-skinned, hulking and muscular humanoid possessing a vast degree of physical strength, and his alter ego Dr. Robert Bruce Banner, a physically weak, socially withdrawn, and emotionally reserved physicist, the two existing as independent personalities and resenting of the other.',\r\n        gender: 'M',\r\n        imgUrl:'https://www.desktopbackground.org/t/2010/10/23/99574_hulk-wallpapers-widescreen_1920x1200_h.jpg',\r\n        planet: 'Earth',\r\n        powers: ['Superhuman strength', 'stamina and durability','Genius-level intellect'],\r\n        rating: 3,\r\n        hasDedicatedMovie: true\r\n    },\r\n    {\r\n        id: 17,\r\n        name: 'Mantis',\r\n        description: 'Mantis is a fictional character, a superhero in the Marvel Universe, and former member of the Avengers. The character was ranked 99th in Comics Buyer\\'s Guide\\'s \"100 Sexiest Women in Comics list.',\r\n        gender: 'F',\r\n        imgUrl: 'https://cdn.vox-cdn.com/thumbor/AlX0xlhv14a64bnDJKQ0AaeOy8A=/0x0:2879x1194/1200x800/filters:focal(865x329:1325x789)/cdn.vox-cdn.com/uploads/chorus_image/image/54825235/mantis.0.png',\r\n        planet: 'Knowhere',\r\n        powers: ['Telepathy','Healing factor','Master martial artist'],\r\n        rating: 2,\r\n        hasDedicatedMovie: false\r\n    },\r\n    {\r\n        id: 19,\r\n        name: 'Loki',\r\n        description: 'He is the adopted brother and often the enemy of the superhero Thor. Loki is based on the Norse deity of the same name and is sometimes depicted as an antihero.',\r\n        gender: 'M',\r\n        imgUrl: 'https://metrouk2.files.wordpress.com/2016/08/loki_avengers-e1471093009466.png',\r\n        planet: 'Asgard',\r\n        powers: ['Master of manipulation and deceit','Illusion casting'],\r\n        rating: 2,\r\n        hasDedicatedMovie: false\r\n    },\r\n    {\r\n        id: 20,\r\n        name: 'Dr Strange',\r\n        description: 'Doctor Strange serves as the Sorcerer Supreme, the primary protector of Earth against magical and mystical threats. Inspired by stories of black magic and Chandu the Magician, Strange was created during the Silver Age of Comic Books to bring a different kind of character and themes of mysticism to Marvel Comics.',\r\n        gender: 'M',\r\n        imgUrl: 'https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/0b4f571b-021b-4e83-9679-eb8c5bf8036d/dce767e-d11ec004-52c9-4df3-80fe-3e5a3da21540.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzBiNGY1NzFiLTAyMWItNGU4My05Njc5LWViOGM1YmY4MDM2ZFwvZGNlNzY3ZS1kMTFlYzAwNC01MmM5LTRkZjMtODBmZS0zZTVhM2RhMjE1NDAucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.Zjr20mqg6KX0fZrQL5TcgC5FXveT6Ldfolw9L_XYqsk',\r\n        planet: 'Earth',\r\n        powers: ['Mastery of magic','IGenius-level intellect','Trained physician'],\r\n        rating: 4,\r\n        hasDedicatedMovie: true\r\n    },\r\n\r\n];\r\n\r\nexport default Avengers;","\r\nimport React from 'react';\r\n\r\nexport const EmptyAvengersList = () => {\r\n    return (\r\n        <h4 style={{textAlign:\"center\"}}>No Avengers Found. Please add some Avengers.</h4>\r\n    );\r\n}","\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { Dashboard } from '../../views/Dashboard/Dashboard';\r\nimport { List } from '../../views/List/List';\r\nimport { Add } from '../../views/Add/Add';\r\nimport { Compare } from '../../views/Compare/Compare';\r\nimport { getAvengers } from '../../api';\r\nimport { EmptyAvengersList } from '../EmptyAvengersList/EmptyAvengersList';\r\n\r\nexport class MainContent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            avengers: [],\r\n            loading: false,\r\n            errMsg: ''\r\n        };\r\n        this.addNewAvenger = this.addNewAvenger.bind(this);\r\n        this.handleAvengerEdit = this.handleAvengerEdit.bind(this);\r\n    }\r\n\r\n    addNewAvenger(newAv) {\r\n        const n = { id: this.state.avengers.length + 1 + 10, ...newAv };\r\n        this.setState((prevState) => ({ avengers: [...prevState.avengers, n] }));\r\n    }\r\n\r\n    handleAvengerEdit(editedAv) {\r\n        const i = this.state.avengers.findIndex(a => a.id === editedAv.id);\r\n        this.setState((prevState) => (\r\n            {\r\n                avengers: [...prevState.avengers.slice(0, i), editedAv, ...prevState.avengers.slice(i + 1)]\r\n            }\r\n        ));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    fetchData() {\r\n        this.setState({ loading: true, errMsg: '' });\r\n        getAvengers()\r\n            .then(avengers => this.setState({ avengers, loading: false }))\r\n            .catch(err => this.setState({ errMsg: err.msg || JSON.stringify(err), loading: false }));\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.loading) {\r\n            return <h5>Loading ...<i className=\"fa fa-spin fa-spinner\"></i></h5>;\r\n        }\r\n        if (this.state.errMsg) {\r\n            return (\r\n                <div style={{ color: 'red', textAlign: 'center' }}>\r\n                    <h6 >Oops ..! {this.state.errMsg}</h6>\r\n                    <button className=\"btn btn-clear btn-danger btn-sm\" onClick={this.fetchData.bind(this)}>Try Again</button>\r\n                </div>\r\n            )\r\n        }\r\n        if (!this.state.avengers.length) {\r\n            return <EmptyAvengersList />\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {/* Switch component renders the first Route children which matches the current url\r\n            Hence only 1 component amongst the children of Switch can be rendered */}\r\n                <Switch>\r\n                    <Route path=\"/dashboard\" render={(props) => <Dashboard avengers={this.state.avengers} {...props} />} ></Route>\r\n                    <Route path=\"/list\" render={(props) =>\r\n                        <List avengers={this.state.avengers} onAvengerDetailEdited={this.handleAvengerEdit} {...props} />} >\r\n                    </Route>\r\n                    <Route path=\"/add\" render={(props) => <Add onAddAvenger={this.addNewAvenger} {...props} />} ></Route>\r\n                    <Route path=\"/compare\" render={(props) => <Compare avengers={this.state.avengers} />} ></Route>\r\n                    <Route path=\"/\" exact render={(props) => (\r\n                        <Redirect to=\"/dashboard\" {...props} ></Redirect>\r\n                    )} ></Route>\r\n                    <Route render={() => <h1 style={{ textAlign: \"center\" }}>404 Error</h1>} />\r\n                </Switch>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n};\r\n\r\n\r\n","import Avengers from './avengerList';\r\n\r\nexport const getAvengers=()=>{\r\n    return new Promise((res,rej)=>{\r\n\r\n        const random = Math.random();\r\n\r\n        setTimeout(() => {\r\n            if(random<0.85){\r\n                res(Avengers);\r\n            }else{\r\n                rej({msg:'Some error occured while loading'});\r\n            }\r\n        }, 1000);\r\n    });\r\n}","import React from 'react';\nimport './App.css';\nimport { Header } from './components/Header/Header';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { MainContent } from './components/MainContent/MainContent';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header />\n        <Navbar />\n        <main className=\"container\" style={{ marginTop: '20px' }}>\n          <MainContent />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}